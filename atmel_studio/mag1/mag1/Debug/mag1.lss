
mag1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800100  0000138e  00001422  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000138e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000066  00800102  00800102  00001424  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001424  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001454  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000128  00000000  00000000  00001490  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001b5c  00000000  00000000  000015b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000838  00000000  00000000  00003114  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000f76  00000000  00000000  0000394c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000330  00000000  00000000  000048c4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000009ad  00000000  00000000  00004bf4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001078  00000000  00000000  000055a1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000118  00000000  00000000  00006619  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__ctors_end>
       4:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
       8:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
       c:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
      10:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
      14:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
      18:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
      1c:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
      20:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
      24:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
      28:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
      2c:	0c 94 15 08 	jmp	0x102a	; 0x102a <__vector_11>
      30:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
      34:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
      38:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
      3c:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
      40:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
      44:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
      48:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
      4c:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
      50:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
      54:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
      58:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
      5c:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
      60:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
      64:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
      68:	13 02       	muls	r17, r19
      6a:	1a 02       	muls	r17, r26
      6c:	20 02       	muls	r18, r16
      6e:	27 02       	muls	r18, r23
      70:	2e 02       	muls	r18, r30
      72:	35 02       	muls	r19, r21
      74:	3c 02       	muls	r19, r28
      76:	43 02       	muls	r20, r19
      78:	48 02       	muls	r20, r24
      7a:	4f 02       	muls	r20, r31
      7c:	56 02       	muls	r21, r22

0000007e <__ctors_end>:
      7e:	11 24       	eor	r1, r1
      80:	1f be       	out	0x3f, r1	; 63
      82:	cf ef       	ldi	r28, 0xFF	; 255
      84:	d8 e0       	ldi	r29, 0x08	; 8
      86:	de bf       	out	0x3e, r29	; 62
      88:	cd bf       	out	0x3d, r28	; 61

0000008a <__do_copy_data>:
      8a:	11 e0       	ldi	r17, 0x01	; 1
      8c:	a0 e0       	ldi	r26, 0x00	; 0
      8e:	b1 e0       	ldi	r27, 0x01	; 1
      90:	ee e8       	ldi	r30, 0x8E	; 142
      92:	f3 e1       	ldi	r31, 0x13	; 19
      94:	02 c0       	rjmp	.+4      	; 0x9a <__do_copy_data+0x10>
      96:	05 90       	lpm	r0, Z+
      98:	0d 92       	st	X+, r0
      9a:	a2 30       	cpi	r26, 0x02	; 2
      9c:	b1 07       	cpc	r27, r17
      9e:	d9 f7       	brne	.-10     	; 0x96 <__do_copy_data+0xc>

000000a0 <__do_clear_bss>:
      a0:	21 e0       	ldi	r18, 0x01	; 1
      a2:	a2 e0       	ldi	r26, 0x02	; 2
      a4:	b1 e0       	ldi	r27, 0x01	; 1
      a6:	01 c0       	rjmp	.+2      	; 0xaa <.do_clear_bss_start>

000000a8 <.do_clear_bss_loop>:
      a8:	1d 92       	st	X+, r1

000000aa <.do_clear_bss_start>:
      aa:	a8 36       	cpi	r26, 0x68	; 104
      ac:	b2 07       	cpc	r27, r18
      ae:	e1 f7       	brne	.-8      	; 0xa8 <.do_clear_bss_loop>
      b0:	0e 94 10 08 	call	0x1020	; 0x1020 <main>
      b4:	0c 94 c5 09 	jmp	0x138a	; 0x138a <_exit>

000000b8 <__bad_interrupt>:
      b8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000bc <_Z9UART_openmm>:
		result_div++;
		dif = dif - B;
	}
	
	return result_div;
}
      bc:	0f 93       	push	r16
      be:	1f 93       	push	r17
      c0:	68 94       	set
      c2:	13 f8       	bld	r1, 3
      c4:	96 95       	lsr	r25
      c6:	87 95       	ror	r24
      c8:	77 95       	ror	r23
      ca:	67 95       	ror	r22
      cc:	16 94       	lsr	r1
      ce:	d1 f7       	brne	.-12     	; 0xc4 <_Z9UART_openmm+0x8>
      d0:	0e 94 48 09 	call	0x1290	; 0x1290 <__udivmodsi4>
      d4:	ca 01       	movw	r24, r20
      d6:	b9 01       	movw	r22, r18
      d8:	61 50       	subi	r22, 0x01	; 1
      da:	71 09       	sbc	r23, r1
      dc:	81 09       	sbc	r24, r1
      de:	91 09       	sbc	r25, r1
      e0:	0e 94 71 08 	call	0x10e2	; 0x10e2 <__floatunsisf>
      e4:	0e 94 d7 08 	call	0x11ae	; 0x11ae <round>
      e8:	0e 94 42 08 	call	0x1084	; 0x1084 <__fixunssfsi>
      ec:	07 2f       	mov	r16, r23
      ee:	18 2f       	mov	r17, r24
      f0:	29 2f       	mov	r18, r25
      f2:	33 27       	eor	r19, r19
      f4:	00 93 c5 00 	sts	0x00C5, r16	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
      f8:	60 93 c4 00 	sts	0x00C4, r22	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
      fc:	88 e9       	ldi	r24, 0x98	; 152
      fe:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
     102:	8e e0       	ldi	r24, 0x0E	; 14
     104:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
     108:	1f 91       	pop	r17
     10a:	0f 91       	pop	r16
     10c:	08 95       	ret

0000010e <_Z16UART_write_shorts>:
     10e:	e0 ec       	ldi	r30, 0xC0	; 192
     110:	f0 e0       	ldi	r31, 0x00	; 0
     112:	20 81       	ld	r18, Z
     114:	25 ff       	sbrs	r18, 5
     116:	fd cf       	rjmp	.-6      	; 0x112 <_Z16UART_write_shorts+0x4>
     118:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
     11c:	e0 ec       	ldi	r30, 0xC0	; 192
     11e:	f0 e0       	ldi	r31, 0x00	; 0
     120:	80 81       	ld	r24, Z
     122:	85 ff       	sbrs	r24, 5
     124:	fd cf       	rjmp	.-6      	; 0x120 <_Z16UART_write_shorts+0x12>
     126:	90 93 c6 00 	sts	0x00C6, r25	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
     12a:	08 95       	ret

0000012c <_Z15UART_write_longl>:
     12c:	ab 01       	movw	r20, r22
     12e:	bc 01       	movw	r22, r24
     130:	e0 ec       	ldi	r30, 0xC0	; 192
     132:	f0 e0       	ldi	r31, 0x00	; 0
     134:	80 81       	ld	r24, Z
     136:	85 ff       	sbrs	r24, 5
     138:	fd cf       	rjmp	.-6      	; 0x134 <_Z15UART_write_longl+0x8>
     13a:	40 93 c6 00 	sts	0x00C6, r20	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
     13e:	e0 ec       	ldi	r30, 0xC0	; 192
     140:	f0 e0       	ldi	r31, 0x00	; 0
     142:	80 81       	ld	r24, Z
     144:	85 ff       	sbrs	r24, 5
     146:	fd cf       	rjmp	.-6      	; 0x142 <_Z15UART_write_longl+0x16>
     148:	bb 27       	eor	r27, r27
     14a:	77 fd       	sbrc	r23, 7
     14c:	ba 95       	dec	r27
     14e:	a7 2f       	mov	r26, r23
     150:	96 2f       	mov	r25, r22
     152:	85 2f       	mov	r24, r21
     154:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
     158:	e0 ec       	ldi	r30, 0xC0	; 192
     15a:	f0 e0       	ldi	r31, 0x00	; 0
     15c:	80 81       	ld	r24, Z
     15e:	85 ff       	sbrs	r24, 5
     160:	fd cf       	rjmp	.-6      	; 0x15c <_Z15UART_write_longl+0x30>
     162:	cb 01       	movw	r24, r22
     164:	bb 27       	eor	r27, r27
     166:	97 fd       	sbrc	r25, 7
     168:	b0 95       	com	r27
     16a:	ab 2f       	mov	r26, r27
     16c:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
     170:	e0 ec       	ldi	r30, 0xC0	; 192
     172:	f0 e0       	ldi	r31, 0x00	; 0
     174:	80 81       	ld	r24, Z
     176:	85 ff       	sbrs	r24, 5
     178:	fd cf       	rjmp	.-6      	; 0x174 <_Z15UART_write_longl+0x48>
     17a:	47 2f       	mov	r20, r23
     17c:	77 27       	eor	r23, r23
     17e:	47 fd       	sbrc	r20, 7
     180:	70 95       	com	r23
     182:	57 2f       	mov	r21, r23
     184:	67 2f       	mov	r22, r23
     186:	40 93 c6 00 	sts	0x00C6, r20	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
     18a:	08 95       	ret

0000018c <_Z14TWI_write_bytehhh>:
     18c:	8f 77       	andi	r24, 0x7F	; 127
     18e:	ec eb       	ldi	r30, 0xBC	; 188
     190:	f0 e0       	ldi	r31, 0x00	; 0
     192:	10 82       	st	Z, r1
     194:	94 ea       	ldi	r25, 0xA4	; 164
     196:	90 83       	st	Z, r25
     198:	90 81       	ld	r25, Z
     19a:	99 23       	and	r25, r25
     19c:	ec f7       	brge	.-6      	; 0x198 <_Z14TWI_write_bytehhh+0xc>
     19e:	88 0f       	add	r24, r24
     1a0:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
     1a4:	84 e8       	ldi	r24, 0x84	; 132
     1a6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
     1aa:	ec eb       	ldi	r30, 0xBC	; 188
     1ac:	f0 e0       	ldi	r31, 0x00	; 0
     1ae:	80 81       	ld	r24, Z
     1b0:	88 23       	and	r24, r24
     1b2:	ec f7       	brge	.-6      	; 0x1ae <_Z14TWI_write_bytehhh+0x22>
     1b4:	60 93 bb 00 	sts	0x00BB, r22	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
     1b8:	84 e8       	ldi	r24, 0x84	; 132
     1ba:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
     1be:	ec eb       	ldi	r30, 0xBC	; 188
     1c0:	f0 e0       	ldi	r31, 0x00	; 0
     1c2:	80 81       	ld	r24, Z
     1c4:	88 23       	and	r24, r24
     1c6:	ec f7       	brge	.-6      	; 0x1c2 <_Z14TWI_write_bytehhh+0x36>
     1c8:	40 93 bb 00 	sts	0x00BB, r20	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
     1cc:	84 e8       	ldi	r24, 0x84	; 132
     1ce:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
     1d2:	ec eb       	ldi	r30, 0xBC	; 188
     1d4:	f0 e0       	ldi	r31, 0x00	; 0
     1d6:	80 81       	ld	r24, Z
     1d8:	88 23       	and	r24, r24
     1da:	ec f7       	brge	.-6      	; 0x1d6 <_Z14TWI_write_bytehhh+0x4a>
     1dc:	84 e9       	ldi	r24, 0x94	; 148
     1de:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
     1e2:	08 95       	ret

000001e4 <_Z13TWI_read_bytehh>:
     1e4:	8f 77       	andi	r24, 0x7F	; 127
     1e6:	ec eb       	ldi	r30, 0xBC	; 188
     1e8:	f0 e0       	ldi	r31, 0x00	; 0
     1ea:	10 82       	st	Z, r1
     1ec:	94 ea       	ldi	r25, 0xA4	; 164
     1ee:	90 83       	st	Z, r25
     1f0:	90 81       	ld	r25, Z
     1f2:	99 23       	and	r25, r25
     1f4:	ec f7       	brge	.-6      	; 0x1f0 <_Z13TWI_read_bytehh+0xc>
     1f6:	98 2f       	mov	r25, r24
     1f8:	99 0f       	add	r25, r25
     1fa:	90 93 bb 00 	sts	0x00BB, r25	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
     1fe:	94 e8       	ldi	r25, 0x84	; 132
     200:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
     204:	ec eb       	ldi	r30, 0xBC	; 188
     206:	f0 e0       	ldi	r31, 0x00	; 0
     208:	90 81       	ld	r25, Z
     20a:	99 23       	and	r25, r25
     20c:	ec f7       	brge	.-6      	; 0x208 <_Z13TWI_read_bytehh+0x24>
     20e:	60 93 bb 00 	sts	0x00BB, r22	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
     212:	94 e8       	ldi	r25, 0x84	; 132
     214:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
     218:	ec eb       	ldi	r30, 0xBC	; 188
     21a:	f0 e0       	ldi	r31, 0x00	; 0
     21c:	90 81       	ld	r25, Z
     21e:	99 23       	and	r25, r25
     220:	ec f7       	brge	.-6      	; 0x21c <_Z13TWI_read_bytehh+0x38>
     222:	ec eb       	ldi	r30, 0xBC	; 188
     224:	f0 e0       	ldi	r31, 0x00	; 0
     226:	94 e9       	ldi	r25, 0x94	; 148
     228:	90 83       	st	Z, r25
     22a:	10 82       	st	Z, r1
     22c:	94 ea       	ldi	r25, 0xA4	; 164
     22e:	90 83       	st	Z, r25
     230:	90 81       	ld	r25, Z
     232:	99 23       	and	r25, r25
     234:	ec f7       	brge	.-6      	; 0x230 <_Z13TWI_read_bytehh+0x4c>
     236:	88 0f       	add	r24, r24
     238:	81 60       	ori	r24, 0x01	; 1
     23a:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
     23e:	84 e8       	ldi	r24, 0x84	; 132
     240:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
     244:	ec eb       	ldi	r30, 0xBC	; 188
     246:	f0 e0       	ldi	r31, 0x00	; 0
     248:	80 81       	ld	r24, Z
     24a:	88 23       	and	r24, r24
     24c:	ec f7       	brge	.-6      	; 0x248 <_Z13TWI_read_bytehh+0x64>
     24e:	84 e8       	ldi	r24, 0x84	; 132
     250:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
     254:	ec eb       	ldi	r30, 0xBC	; 188
     256:	f0 e0       	ldi	r31, 0x00	; 0
     258:	80 81       	ld	r24, Z
     25a:	88 23       	and	r24, r24
     25c:	ec f7       	brge	.-6      	; 0x258 <_Z13TWI_read_bytehh+0x74>
     25e:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
     262:	94 e9       	ldi	r25, 0x94	; 148
     264:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
     268:	08 95       	ret

0000026a <_Z8lcd_initv>:
     26a:	38 9a       	sbi	0x07, 0	; 7
     26c:	25 9a       	sbi	0x04, 5	; 4
     26e:	2d 98       	cbi	0x05, 5	; 5
     270:	27 9a       	sbi	0x04, 7	; 4
     272:	2f 98       	cbi	0x05, 7	; 5
     274:	26 9a       	sbi	0x04, 6	; 4
     276:	2e 98       	cbi	0x05, 6	; 5
     278:	54 9a       	sbi	0x0a, 4	; 10
     27a:	5c 98       	cbi	0x0b, 4	; 11
     27c:	53 9a       	sbi	0x0a, 3	; 10
     27e:	5b 98       	cbi	0x0b, 3	; 11
     280:	24 9a       	sbi	0x04, 4	; 4
     282:	23 9a       	sbi	0x04, 3	; 4
     284:	22 9a       	sbi	0x04, 2	; 4
     286:	21 9a       	sbi	0x04, 1	; 4
     288:	20 9a       	sbi	0x04, 0	; 4
     28a:	57 9a       	sbi	0x0a, 7	; 10
     28c:	56 9a       	sbi	0x0a, 6	; 10
     28e:	55 9a       	sbi	0x0a, 5	; 10
     290:	08 95       	ret

00000292 <_Z9clear_lcdv>:
     292:	2f 9a       	sbi	0x05, 7	; 5
     294:	2e 9a       	sbi	0x05, 6	; 5
     296:	5c 9a       	sbi	0x0b, 4	; 11
     298:	5b 9a       	sbi	0x0b, 3	; 11
     29a:	5f 98       	cbi	0x0b, 7	; 11
     29c:	28 98       	cbi	0x05, 0	; 5
     29e:	2a 98       	cbi	0x05, 2	; 5
     2a0:	2b 98       	cbi	0x05, 3	; 5
     2a2:	2c 98       	cbi	0x05, 4	; 5
     2a4:	5e 98       	cbi	0x0b, 6	; 11
     2a6:	5d 98       	cbi	0x0b, 5	; 11
     2a8:	29 98       	cbi	0x05, 1	; 5
     2aa:	2f 98       	cbi	0x05, 7	; 5
     2ac:	2e 98       	cbi	0x05, 6	; 5
     2ae:	5c 98       	cbi	0x0b, 4	; 11
     2b0:	5b 98       	cbi	0x0b, 3	; 11
     2b2:	08 95       	ret

000002b4 <_Z14delay_countersm>:
     2b4:	ab 01       	movw	r20, r22
     2b6:	bc 01       	movw	r22, r24
     2b8:	41 15       	cp	r20, r1
     2ba:	51 05       	cpc	r21, r1
     2bc:	61 05       	cpc	r22, r1
     2be:	71 05       	cpc	r23, r1
     2c0:	61 f0       	breq	.+24     	; 0x2da <_Z14delay_countersm+0x26>
     2c2:	80 e0       	ldi	r24, 0x00	; 0
     2c4:	90 e0       	ldi	r25, 0x00	; 0
     2c6:	dc 01       	movw	r26, r24
     2c8:	00 00       	nop
     2ca:	01 96       	adiw	r24, 0x01	; 1
     2cc:	a1 1d       	adc	r26, r1
     2ce:	b1 1d       	adc	r27, r1
     2d0:	48 17       	cp	r20, r24
     2d2:	59 07       	cpc	r21, r25
     2d4:	6a 07       	cpc	r22, r26
     2d6:	7b 07       	cpc	r23, r27
     2d8:	b9 f7       	brne	.-18     	; 0x2c8 <_Z14delay_countersm+0x14>
     2da:	08 95       	ret

000002dc <_Z12test_segmentv>:
     2dc:	0e 94 49 01 	call	0x292	; 0x292 <_Z9clear_lcdv>
     2e0:	40 9a       	sbi	0x08, 0	; 8
     2e2:	60 e4       	ldi	r22, 0x40	; 64
     2e4:	7d e0       	ldi	r23, 0x0D	; 13
     2e6:	83 e0       	ldi	r24, 0x03	; 3
     2e8:	90 e0       	ldi	r25, 0x00	; 0
     2ea:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <_Z14delay_countersm>
     2ee:	40 98       	cbi	0x08, 0	; 8
     2f0:	0e 94 49 01 	call	0x292	; 0x292 <_Z9clear_lcdv>
     2f4:	2f 9a       	sbi	0x05, 7	; 5
     2f6:	2e 9a       	sbi	0x05, 6	; 5
     2f8:	5c 9a       	sbi	0x0b, 4	; 11
     2fa:	5b 9a       	sbi	0x0b, 3	; 11
     2fc:	5f 9a       	sbi	0x0b, 7	; 11
     2fe:	2f 98       	cbi	0x05, 7	; 5
     300:	2e 98       	cbi	0x05, 6	; 5
     302:	5c 98       	cbi	0x0b, 4	; 11
     304:	5b 98       	cbi	0x0b, 3	; 11
     306:	60 e4       	ldi	r22, 0x40	; 64
     308:	7d e0       	ldi	r23, 0x0D	; 13
     30a:	83 e0       	ldi	r24, 0x03	; 3
     30c:	90 e0       	ldi	r25, 0x00	; 0
     30e:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <_Z14delay_countersm>
     312:	0e 94 49 01 	call	0x292	; 0x292 <_Z9clear_lcdv>
     316:	2f 9a       	sbi	0x05, 7	; 5
     318:	2e 9a       	sbi	0x05, 6	; 5
     31a:	5c 9a       	sbi	0x0b, 4	; 11
     31c:	5b 9a       	sbi	0x0b, 3	; 11
     31e:	28 9a       	sbi	0x05, 0	; 5
     320:	2f 98       	cbi	0x05, 7	; 5
     322:	2e 98       	cbi	0x05, 6	; 5
     324:	5c 98       	cbi	0x0b, 4	; 11
     326:	5b 98       	cbi	0x0b, 3	; 11
     328:	60 e4       	ldi	r22, 0x40	; 64
     32a:	7d e0       	ldi	r23, 0x0D	; 13
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	90 e0       	ldi	r25, 0x00	; 0
     330:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <_Z14delay_countersm>
     334:	0e 94 49 01 	call	0x292	; 0x292 <_Z9clear_lcdv>
     338:	2f 9a       	sbi	0x05, 7	; 5
     33a:	2e 9a       	sbi	0x05, 6	; 5
     33c:	5c 9a       	sbi	0x0b, 4	; 11
     33e:	5b 9a       	sbi	0x0b, 3	; 11
     340:	2a 9a       	sbi	0x05, 2	; 5
     342:	2f 98       	cbi	0x05, 7	; 5
     344:	2e 98       	cbi	0x05, 6	; 5
     346:	5c 98       	cbi	0x0b, 4	; 11
     348:	5b 98       	cbi	0x0b, 3	; 11
     34a:	60 e4       	ldi	r22, 0x40	; 64
     34c:	7d e0       	ldi	r23, 0x0D	; 13
     34e:	83 e0       	ldi	r24, 0x03	; 3
     350:	90 e0       	ldi	r25, 0x00	; 0
     352:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <_Z14delay_countersm>
     356:	0e 94 49 01 	call	0x292	; 0x292 <_Z9clear_lcdv>
     35a:	2f 9a       	sbi	0x05, 7	; 5
     35c:	2e 9a       	sbi	0x05, 6	; 5
     35e:	5c 9a       	sbi	0x0b, 4	; 11
     360:	5b 9a       	sbi	0x0b, 3	; 11
     362:	2b 9a       	sbi	0x05, 3	; 5
     364:	2f 98       	cbi	0x05, 7	; 5
     366:	2e 98       	cbi	0x05, 6	; 5
     368:	5c 98       	cbi	0x0b, 4	; 11
     36a:	5b 98       	cbi	0x0b, 3	; 11
     36c:	60 e4       	ldi	r22, 0x40	; 64
     36e:	7d e0       	ldi	r23, 0x0D	; 13
     370:	83 e0       	ldi	r24, 0x03	; 3
     372:	90 e0       	ldi	r25, 0x00	; 0
     374:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <_Z14delay_countersm>
     378:	0e 94 49 01 	call	0x292	; 0x292 <_Z9clear_lcdv>
     37c:	2f 9a       	sbi	0x05, 7	; 5
     37e:	2e 9a       	sbi	0x05, 6	; 5
     380:	5c 9a       	sbi	0x0b, 4	; 11
     382:	5b 9a       	sbi	0x0b, 3	; 11
     384:	2c 9a       	sbi	0x05, 4	; 5
     386:	2f 98       	cbi	0x05, 7	; 5
     388:	2e 98       	cbi	0x05, 6	; 5
     38a:	5c 98       	cbi	0x0b, 4	; 11
     38c:	5b 98       	cbi	0x0b, 3	; 11
     38e:	60 e4       	ldi	r22, 0x40	; 64
     390:	7d e0       	ldi	r23, 0x0D	; 13
     392:	83 e0       	ldi	r24, 0x03	; 3
     394:	90 e0       	ldi	r25, 0x00	; 0
     396:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <_Z14delay_countersm>
     39a:	0e 94 49 01 	call	0x292	; 0x292 <_Z9clear_lcdv>
     39e:	2f 9a       	sbi	0x05, 7	; 5
     3a0:	2e 9a       	sbi	0x05, 6	; 5
     3a2:	5c 9a       	sbi	0x0b, 4	; 11
     3a4:	5b 9a       	sbi	0x0b, 3	; 11
     3a6:	5e 9a       	sbi	0x0b, 6	; 11
     3a8:	2f 98       	cbi	0x05, 7	; 5
     3aa:	2e 98       	cbi	0x05, 6	; 5
     3ac:	5c 98       	cbi	0x0b, 4	; 11
     3ae:	5b 98       	cbi	0x0b, 3	; 11
     3b0:	60 e4       	ldi	r22, 0x40	; 64
     3b2:	7d e0       	ldi	r23, 0x0D	; 13
     3b4:	83 e0       	ldi	r24, 0x03	; 3
     3b6:	90 e0       	ldi	r25, 0x00	; 0
     3b8:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <_Z14delay_countersm>
     3bc:	0e 94 49 01 	call	0x292	; 0x292 <_Z9clear_lcdv>
     3c0:	2f 9a       	sbi	0x05, 7	; 5
     3c2:	2e 9a       	sbi	0x05, 6	; 5
     3c4:	5c 9a       	sbi	0x0b, 4	; 11
     3c6:	5b 9a       	sbi	0x0b, 3	; 11
     3c8:	5d 9a       	sbi	0x0b, 5	; 11
     3ca:	2f 98       	cbi	0x05, 7	; 5
     3cc:	2e 98       	cbi	0x05, 6	; 5
     3ce:	5c 98       	cbi	0x0b, 4	; 11
     3d0:	5b 98       	cbi	0x0b, 3	; 11
     3d2:	60 e4       	ldi	r22, 0x40	; 64
     3d4:	7d e0       	ldi	r23, 0x0D	; 13
     3d6:	83 e0       	ldi	r24, 0x03	; 3
     3d8:	90 e0       	ldi	r25, 0x00	; 0
     3da:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <_Z14delay_countersm>
     3de:	0e 94 49 01 	call	0x292	; 0x292 <_Z9clear_lcdv>
     3e2:	2f 9a       	sbi	0x05, 7	; 5
     3e4:	2e 9a       	sbi	0x05, 6	; 5
     3e6:	5c 9a       	sbi	0x0b, 4	; 11
     3e8:	5b 9a       	sbi	0x0b, 3	; 11
     3ea:	29 9a       	sbi	0x05, 1	; 5
     3ec:	2f 98       	cbi	0x05, 7	; 5
     3ee:	2e 98       	cbi	0x05, 6	; 5
     3f0:	5c 98       	cbi	0x0b, 4	; 11
     3f2:	5b 98       	cbi	0x0b, 3	; 11
     3f4:	60 e4       	ldi	r22, 0x40	; 64
     3f6:	7d e0       	ldi	r23, 0x0D	; 13
     3f8:	83 e0       	ldi	r24, 0x03	; 3
     3fa:	90 e0       	ldi	r25, 0x00	; 0
     3fc:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <_Z14delay_countersm>
     400:	08 95       	ret

00000402 <_Z9seg_writeh>:
     402:	e8 2f       	mov	r30, r24
     404:	85 b1       	in	r24, 0x05	; 5
     406:	80 7e       	andi	r24, 0xE0	; 224
     408:	85 b9       	out	0x05, r24	; 5
     40a:	8b b1       	in	r24, 0x0b	; 11
     40c:	8f 71       	andi	r24, 0x1F	; 31
     40e:	8b b9       	out	0x0b, r24	; 11
     410:	8e 2f       	mov	r24, r30
     412:	90 e0       	ldi	r25, 0x00	; 0
     414:	8b 30       	cpi	r24, 0x0B	; 11
     416:	91 05       	cpc	r25, r1
     418:	08 f0       	brcs	.+2      	; 0x41c <_Z9seg_writeh+0x1a>
     41a:	4c c0       	rjmp	.+152    	; 0x4b4 <_Z9seg_writeh+0xb2>
     41c:	fc 01       	movw	r30, r24
     41e:	ec 5c       	subi	r30, 0xCC	; 204
     420:	ff 4f       	sbci	r31, 0xFF	; 255
     422:	0c 94 89 09 	jmp	0x1312	; 0x1312 <__tablejump2__>
     426:	85 b1       	in	r24, 0x05	; 5
     428:	8d 61       	ori	r24, 0x1D	; 29
     42a:	85 b9       	out	0x05, r24	; 5
     42c:	8b b1       	in	r24, 0x0b	; 11
     42e:	80 6c       	ori	r24, 0xC0	; 192
     430:	8b b9       	out	0x0b, r24	; 11
     432:	08 95       	ret
     434:	85 b1       	in	r24, 0x05	; 5
     436:	85 60       	ori	r24, 0x05	; 5
     438:	85 b9       	out	0x05, r24	; 5
     43a:	8b b1       	in	r24, 0x0b	; 11
     43c:	8b b9       	out	0x0b, r24	; 11
     43e:	08 95       	ret
     440:	85 b1       	in	r24, 0x05	; 5
     442:	89 61       	ori	r24, 0x19	; 25
     444:	85 b9       	out	0x05, r24	; 5
     446:	8b b1       	in	r24, 0x0b	; 11
     448:	80 6a       	ori	r24, 0xA0	; 160
     44a:	8b b9       	out	0x0b, r24	; 11
     44c:	08 95       	ret
     44e:	85 b1       	in	r24, 0x05	; 5
     450:	8d 60       	ori	r24, 0x0D	; 13
     452:	85 b9       	out	0x05, r24	; 5
     454:	8b b1       	in	r24, 0x0b	; 11
     456:	80 6a       	ori	r24, 0xA0	; 160
     458:	8b b9       	out	0x0b, r24	; 11
     45a:	08 95       	ret
     45c:	85 b1       	in	r24, 0x05	; 5
     45e:	85 60       	ori	r24, 0x05	; 5
     460:	85 b9       	out	0x05, r24	; 5
     462:	8b b1       	in	r24, 0x0b	; 11
     464:	80 66       	ori	r24, 0x60	; 96
     466:	8b b9       	out	0x0b, r24	; 11
     468:	08 95       	ret
     46a:	85 b1       	in	r24, 0x05	; 5
     46c:	8c 60       	ori	r24, 0x0C	; 12
     46e:	85 b9       	out	0x05, r24	; 5
     470:	8b b1       	in	r24, 0x0b	; 11
     472:	80 6e       	ori	r24, 0xE0	; 224
     474:	8b b9       	out	0x0b, r24	; 11
     476:	08 95       	ret
     478:	85 b1       	in	r24, 0x05	; 5
     47a:	8c 61       	ori	r24, 0x1C	; 28
     47c:	85 b9       	out	0x05, r24	; 5
     47e:	8b b1       	in	r24, 0x0b	; 11
     480:	80 6e       	ori	r24, 0xE0	; 224
     482:	8b b9       	out	0x0b, r24	; 11
     484:	08 95       	ret
     486:	85 b1       	in	r24, 0x05	; 5
     488:	85 60       	ori	r24, 0x05	; 5
     48a:	85 b9       	out	0x05, r24	; 5
     48c:	5f 9a       	sbi	0x0b, 7	; 11
     48e:	08 95       	ret
     490:	85 b1       	in	r24, 0x05	; 5
     492:	8d 61       	ori	r24, 0x1D	; 29
     494:	85 b9       	out	0x05, r24	; 5
     496:	8b b1       	in	r24, 0x0b	; 11
     498:	80 6e       	ori	r24, 0xE0	; 224
     49a:	8b b9       	out	0x0b, r24	; 11
     49c:	08 95       	ret
     49e:	85 b1       	in	r24, 0x05	; 5
     4a0:	8d 60       	ori	r24, 0x0D	; 13
     4a2:	85 b9       	out	0x05, r24	; 5
     4a4:	8b b1       	in	r24, 0x0b	; 11
     4a6:	80 6e       	ori	r24, 0xE0	; 224
     4a8:	8b b9       	out	0x0b, r24	; 11
     4aa:	08 95       	ret
     4ac:	85 b1       	in	r24, 0x05	; 5
     4ae:	85 b9       	out	0x05, r24	; 5
     4b0:	8b b1       	in	r24, 0x0b	; 11
     4b2:	8b b9       	out	0x0b, r24	; 11
     4b4:	08 95       	ret

000004b6 <_Z9displayedi>:
     4b6:	0f 93       	push	r16
     4b8:	1f 93       	push	r17
     4ba:	cf 93       	push	r28
     4bc:	df 93       	push	r29
     4be:	ec 01       	movw	r28, r24
     4c0:	99 23       	and	r25, r25
     4c2:	7c f0       	brlt	.+30     	; 0x4e2 <_Z9displayedi+0x2c>
     4c4:	6a e0       	ldi	r22, 0x0A	; 10
     4c6:	70 e0       	ldi	r23, 0x00	; 0
     4c8:	0e 94 34 09 	call	0x1268	; 0x1268 <__divmodhi4>
     4cc:	0e 94 01 02 	call	0x402	; 0x402 <_Z9seg_writeh>
     4d0:	5b 9a       	sbi	0x0b, 3	; 11
     4d2:	61 e0       	ldi	r22, 0x01	; 1
     4d4:	70 e0       	ldi	r23, 0x00	; 0
     4d6:	80 e0       	ldi	r24, 0x00	; 0
     4d8:	90 e0       	ldi	r25, 0x00	; 0
     4da:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <_Z14delay_countersm>
     4de:	5b 98       	cbi	0x0b, 3	; 11
     4e0:	13 c0       	rjmp	.+38     	; 0x508 <_Z9displayedi+0x52>
     4e2:	d1 95       	neg	r29
     4e4:	c1 95       	neg	r28
     4e6:	d1 09       	sbc	r29, r1
     4e8:	ce 01       	movw	r24, r28
     4ea:	6a e0       	ldi	r22, 0x0A	; 10
     4ec:	70 e0       	ldi	r23, 0x00	; 0
     4ee:	0e 94 34 09 	call	0x1268	; 0x1268 <__divmodhi4>
     4f2:	0e 94 01 02 	call	0x402	; 0x402 <_Z9seg_writeh>
     4f6:	29 9a       	sbi	0x05, 1	; 5
     4f8:	5b 9a       	sbi	0x0b, 3	; 11
     4fa:	61 e0       	ldi	r22, 0x01	; 1
     4fc:	70 e0       	ldi	r23, 0x00	; 0
     4fe:	80 e0       	ldi	r24, 0x00	; 0
     500:	90 e0       	ldi	r25, 0x00	; 0
     502:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <_Z14delay_countersm>
     506:	5b 98       	cbi	0x0b, 3	; 11
     508:	04 e6       	ldi	r16, 0x64	; 100
     50a:	10 e0       	ldi	r17, 0x00	; 0
     50c:	ce 01       	movw	r24, r28
     50e:	b8 01       	movw	r22, r16
     510:	0e 94 34 09 	call	0x1268	; 0x1268 <__divmodhi4>
     514:	6a e0       	ldi	r22, 0x0A	; 10
     516:	70 e0       	ldi	r23, 0x00	; 0
     518:	0e 94 34 09 	call	0x1268	; 0x1268 <__divmodhi4>
     51c:	07 2e       	mov	r0, r23
     51e:	00 0c       	add	r0, r0
     520:	88 0b       	sbc	r24, r24
     522:	99 0b       	sbc	r25, r25
     524:	0e 94 73 08 	call	0x10e6	; 0x10e6 <__floatsisf>
     528:	0e 94 d7 08 	call	0x11ae	; 0x11ae <round>
     52c:	0e 94 42 08 	call	0x1084	; 0x1084 <__fixunssfsi>
     530:	86 2f       	mov	r24, r22
     532:	0e 94 01 02 	call	0x402	; 0x402 <_Z9seg_writeh>
     536:	5c 9a       	sbi	0x0b, 4	; 11
     538:	61 e0       	ldi	r22, 0x01	; 1
     53a:	70 e0       	ldi	r23, 0x00	; 0
     53c:	80 e0       	ldi	r24, 0x00	; 0
     53e:	90 e0       	ldi	r25, 0x00	; 0
     540:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <_Z14delay_countersm>
     544:	5c 98       	cbi	0x0b, 4	; 11
     546:	ce 01       	movw	r24, r28
     548:	68 ee       	ldi	r22, 0xE8	; 232
     54a:	73 e0       	ldi	r23, 0x03	; 3
     54c:	0e 94 34 09 	call	0x1268	; 0x1268 <__divmodhi4>
     550:	eb 01       	movw	r28, r22
     552:	b8 01       	movw	r22, r16
     554:	0e 94 34 09 	call	0x1268	; 0x1268 <__divmodhi4>
     558:	07 2e       	mov	r0, r23
     55a:	00 0c       	add	r0, r0
     55c:	88 0b       	sbc	r24, r24
     55e:	99 0b       	sbc	r25, r25
     560:	0e 94 73 08 	call	0x10e6	; 0x10e6 <__floatsisf>
     564:	0e 94 d7 08 	call	0x11ae	; 0x11ae <round>
     568:	0e 94 42 08 	call	0x1084	; 0x1084 <__fixunssfsi>
     56c:	86 2f       	mov	r24, r22
     56e:	0e 94 01 02 	call	0x402	; 0x402 <_Z9seg_writeh>
     572:	2e 9a       	sbi	0x05, 6	; 5
     574:	61 e0       	ldi	r22, 0x01	; 1
     576:	70 e0       	ldi	r23, 0x00	; 0
     578:	80 e0       	ldi	r24, 0x00	; 0
     57a:	90 e0       	ldi	r25, 0x00	; 0
     57c:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <_Z14delay_countersm>
     580:	2e 98       	cbi	0x05, 6	; 5
     582:	be 01       	movw	r22, r28
     584:	dd 0f       	add	r29, r29
     586:	88 0b       	sbc	r24, r24
     588:	99 0b       	sbc	r25, r25
     58a:	0e 94 73 08 	call	0x10e6	; 0x10e6 <__floatsisf>
     58e:	0e 94 d7 08 	call	0x11ae	; 0x11ae <round>
     592:	0e 94 42 08 	call	0x1084	; 0x1084 <__fixunssfsi>
     596:	86 2f       	mov	r24, r22
     598:	0e 94 01 02 	call	0x402	; 0x402 <_Z9seg_writeh>
     59c:	2f 9a       	sbi	0x05, 7	; 5
     59e:	61 e0       	ldi	r22, 0x01	; 1
     5a0:	70 e0       	ldi	r23, 0x00	; 0
     5a2:	80 e0       	ldi	r24, 0x00	; 0
     5a4:	90 e0       	ldi	r25, 0x00	; 0
     5a6:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <_Z14delay_countersm>
     5aa:	2f 98       	cbi	0x05, 7	; 5
     5ac:	85 b1       	in	r24, 0x05	; 5
     5ae:	80 7e       	andi	r24, 0xE0	; 224
     5b0:	85 b9       	out	0x05, r24	; 5
     5b2:	8b b1       	in	r24, 0x0b	; 11
     5b4:	8f 71       	andi	r24, 0x1F	; 31
     5b6:	8b b9       	out	0x0b, r24	; 11
     5b8:	df 91       	pop	r29
     5ba:	cf 91       	pop	r28
     5bc:	1f 91       	pop	r17
     5be:	0f 91       	pop	r16
     5c0:	08 95       	ret

000005c2 <_Z18init_timer_counterv>:
     5c2:	e1 e8       	ldi	r30, 0x81	; 129
     5c4:	f0 e0       	ldi	r31, 0x00	; 0
     5c6:	80 81       	ld	r24, Z
     5c8:	82 60       	ori	r24, 0x02	; 2
     5ca:	80 83       	st	Z, r24
     5cc:	88 ee       	ldi	r24, 0xE8	; 232
     5ce:	93 e0       	ldi	r25, 0x03	; 3
     5d0:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
     5d4:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
     5d8:	ef e6       	ldi	r30, 0x6F	; 111
     5da:	f0 e0       	ldi	r31, 0x00	; 0
     5dc:	80 81       	ld	r24, Z
     5de:	82 60       	ori	r24, 0x02	; 2
     5e0:	80 83       	st	Z, r24
     5e2:	08 95       	ret

000005e4 <_Z20bmp180_get_cal_paramv>:
     5e4:	0f 93       	push	r16
     5e6:	1f 93       	push	r17
     5e8:	cf 93       	push	r28
     5ea:	6a ea       	ldi	r22, 0xAA	; 170
     5ec:	87 e7       	ldi	r24, 0x77	; 119
     5ee:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_Z13TWI_read_bytehh>
     5f2:	c8 2f       	mov	r28, r24
     5f4:	6b ea       	ldi	r22, 0xAB	; 171
     5f6:	87 e7       	ldi	r24, 0x77	; 119
     5f8:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_Z13TWI_read_bytehh>
     5fc:	2c 2f       	mov	r18, r28
     5fe:	30 e0       	ldi	r19, 0x00	; 0
     600:	32 2f       	mov	r19, r18
     602:	22 27       	eor	r18, r18
     604:	28 2b       	or	r18, r24
     606:	30 93 67 01 	sts	0x0167, r19	; 0x800167 <bmp180_AC1+0x1>
     60a:	20 93 66 01 	sts	0x0166, r18	; 0x800166 <bmp180_AC1>
     60e:	6c ea       	ldi	r22, 0xAC	; 172
     610:	87 e7       	ldi	r24, 0x77	; 119
     612:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_Z13TWI_read_bytehh>
     616:	c8 2f       	mov	r28, r24
     618:	6d ea       	ldi	r22, 0xAD	; 173
     61a:	87 e7       	ldi	r24, 0x77	; 119
     61c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_Z13TWI_read_bytehh>
     620:	2c 2f       	mov	r18, r28
     622:	30 e0       	ldi	r19, 0x00	; 0
     624:	32 2f       	mov	r19, r18
     626:	22 27       	eor	r18, r18
     628:	28 2b       	or	r18, r24
     62a:	30 93 65 01 	sts	0x0165, r19	; 0x800165 <bmp180_AC2+0x1>
     62e:	20 93 64 01 	sts	0x0164, r18	; 0x800164 <bmp180_AC2>
     632:	6e ea       	ldi	r22, 0xAE	; 174
     634:	87 e7       	ldi	r24, 0x77	; 119
     636:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_Z13TWI_read_bytehh>
     63a:	c8 2f       	mov	r28, r24
     63c:	6f ea       	ldi	r22, 0xAF	; 175
     63e:	87 e7       	ldi	r24, 0x77	; 119
     640:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_Z13TWI_read_bytehh>
     644:	2c 2f       	mov	r18, r28
     646:	30 e0       	ldi	r19, 0x00	; 0
     648:	32 2f       	mov	r19, r18
     64a:	22 27       	eor	r18, r18
     64c:	28 2b       	or	r18, r24
     64e:	30 93 63 01 	sts	0x0163, r19	; 0x800163 <bmp180_AC3+0x1>
     652:	20 93 62 01 	sts	0x0162, r18	; 0x800162 <bmp180_AC3>
     656:	66 eb       	ldi	r22, 0xB6	; 182
     658:	87 e7       	ldi	r24, 0x77	; 119
     65a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_Z13TWI_read_bytehh>
     65e:	c8 2f       	mov	r28, r24
     660:	67 eb       	ldi	r22, 0xB7	; 183
     662:	87 e7       	ldi	r24, 0x77	; 119
     664:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_Z13TWI_read_bytehh>
     668:	2c 2f       	mov	r18, r28
     66a:	30 e0       	ldi	r19, 0x00	; 0
     66c:	32 2f       	mov	r19, r18
     66e:	22 27       	eor	r18, r18
     670:	28 2b       	or	r18, r24
     672:	30 93 61 01 	sts	0x0161, r19	; 0x800161 <bmp180_B1+0x1>
     676:	20 93 60 01 	sts	0x0160, r18	; 0x800160 <bmp180_B1>
     67a:	68 eb       	ldi	r22, 0xB8	; 184
     67c:	87 e7       	ldi	r24, 0x77	; 119
     67e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_Z13TWI_read_bytehh>
     682:	c8 2f       	mov	r28, r24
     684:	69 eb       	ldi	r22, 0xB9	; 185
     686:	87 e7       	ldi	r24, 0x77	; 119
     688:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_Z13TWI_read_bytehh>
     68c:	2c 2f       	mov	r18, r28
     68e:	30 e0       	ldi	r19, 0x00	; 0
     690:	32 2f       	mov	r19, r18
     692:	22 27       	eor	r18, r18
     694:	28 2b       	or	r18, r24
     696:	30 93 5f 01 	sts	0x015F, r19	; 0x80015f <bmp180_B2+0x1>
     69a:	20 93 5e 01 	sts	0x015E, r18	; 0x80015e <bmp180_B2>
     69e:	6a eb       	ldi	r22, 0xBA	; 186
     6a0:	87 e7       	ldi	r24, 0x77	; 119
     6a2:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_Z13TWI_read_bytehh>
     6a6:	c8 2f       	mov	r28, r24
     6a8:	6b eb       	ldi	r22, 0xBB	; 187
     6aa:	87 e7       	ldi	r24, 0x77	; 119
     6ac:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_Z13TWI_read_bytehh>
     6b0:	2c 2f       	mov	r18, r28
     6b2:	30 e0       	ldi	r19, 0x00	; 0
     6b4:	32 2f       	mov	r19, r18
     6b6:	22 27       	eor	r18, r18
     6b8:	28 2b       	or	r18, r24
     6ba:	30 93 5d 01 	sts	0x015D, r19	; 0x80015d <bmp180_MB+0x1>
     6be:	20 93 5c 01 	sts	0x015C, r18	; 0x80015c <bmp180_MB>
     6c2:	6c eb       	ldi	r22, 0xBC	; 188
     6c4:	87 e7       	ldi	r24, 0x77	; 119
     6c6:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_Z13TWI_read_bytehh>
     6ca:	c8 2f       	mov	r28, r24
     6cc:	6d eb       	ldi	r22, 0xBD	; 189
     6ce:	87 e7       	ldi	r24, 0x77	; 119
     6d0:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_Z13TWI_read_bytehh>
     6d4:	2c 2f       	mov	r18, r28
     6d6:	30 e0       	ldi	r19, 0x00	; 0
     6d8:	32 2f       	mov	r19, r18
     6da:	22 27       	eor	r18, r18
     6dc:	28 2b       	or	r18, r24
     6de:	30 93 5b 01 	sts	0x015B, r19	; 0x80015b <bmp180_MC+0x1>
     6e2:	20 93 5a 01 	sts	0x015A, r18	; 0x80015a <bmp180_MC>
     6e6:	6e eb       	ldi	r22, 0xBE	; 190
     6e8:	87 e7       	ldi	r24, 0x77	; 119
     6ea:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_Z13TWI_read_bytehh>
     6ee:	c8 2f       	mov	r28, r24
     6f0:	6f eb       	ldi	r22, 0xBF	; 191
     6f2:	87 e7       	ldi	r24, 0x77	; 119
     6f4:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_Z13TWI_read_bytehh>
     6f8:	2c 2f       	mov	r18, r28
     6fa:	30 e0       	ldi	r19, 0x00	; 0
     6fc:	32 2f       	mov	r19, r18
     6fe:	22 27       	eor	r18, r18
     700:	28 2b       	or	r18, r24
     702:	30 93 59 01 	sts	0x0159, r19	; 0x800159 <bmp180_MD+0x1>
     706:	20 93 58 01 	sts	0x0158, r18	; 0x800158 <bmp180_MD>
     70a:	60 eb       	ldi	r22, 0xB0	; 176
     70c:	87 e7       	ldi	r24, 0x77	; 119
     70e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_Z13TWI_read_bytehh>
     712:	c8 2f       	mov	r28, r24
     714:	61 eb       	ldi	r22, 0xB1	; 177
     716:	87 e7       	ldi	r24, 0x77	; 119
     718:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_Z13TWI_read_bytehh>
     71c:	2c 2f       	mov	r18, r28
     71e:	30 e0       	ldi	r19, 0x00	; 0
     720:	32 2f       	mov	r19, r18
     722:	22 27       	eor	r18, r18
     724:	28 2b       	or	r18, r24
     726:	30 93 53 01 	sts	0x0153, r19	; 0x800153 <bmp180_AC4+0x1>
     72a:	20 93 52 01 	sts	0x0152, r18	; 0x800152 <bmp180_AC4>
     72e:	62 eb       	ldi	r22, 0xB2	; 178
     730:	87 e7       	ldi	r24, 0x77	; 119
     732:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_Z13TWI_read_bytehh>
     736:	c8 2f       	mov	r28, r24
     738:	63 eb       	ldi	r22, 0xB3	; 179
     73a:	87 e7       	ldi	r24, 0x77	; 119
     73c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_Z13TWI_read_bytehh>
     740:	2c 2f       	mov	r18, r28
     742:	30 e0       	ldi	r19, 0x00	; 0
     744:	32 2f       	mov	r19, r18
     746:	22 27       	eor	r18, r18
     748:	28 2b       	or	r18, r24
     74a:	30 93 51 01 	sts	0x0151, r19	; 0x800151 <bmp180_AC5+0x1>
     74e:	20 93 50 01 	sts	0x0150, r18	; 0x800150 <bmp180_AC5>
     752:	64 eb       	ldi	r22, 0xB4	; 180
     754:	87 e7       	ldi	r24, 0x77	; 119
     756:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_Z13TWI_read_bytehh>
     75a:	c8 2f       	mov	r28, r24
     75c:	65 eb       	ldi	r22, 0xB5	; 181
     75e:	87 e7       	ldi	r24, 0x77	; 119
     760:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_Z13TWI_read_bytehh>
     764:	2c 2f       	mov	r18, r28
     766:	30 e0       	ldi	r19, 0x00	; 0
     768:	32 2f       	mov	r19, r18
     76a:	22 27       	eor	r18, r18
     76c:	a9 01       	movw	r20, r18
     76e:	48 2b       	or	r20, r24
     770:	ca 01       	movw	r24, r20
     772:	90 93 4f 01 	sts	0x014F, r25	; 0x80014f <bmp180_AC6+0x1>
     776:	80 93 4e 01 	sts	0x014E, r24	; 0x80014e <bmp180_AC6>
     77a:	40 91 52 01 	lds	r20, 0x0152	; 0x800152 <bmp180_AC4>
     77e:	50 91 53 01 	lds	r21, 0x0153	; 0x800153 <bmp180_AC4+0x1>
     782:	60 e0       	ldi	r22, 0x00	; 0
     784:	70 e0       	ldi	r23, 0x00	; 0
     786:	40 93 4a 01 	sts	0x014A, r20	; 0x80014a <long_bmp180_AC4>
     78a:	50 93 4b 01 	sts	0x014B, r21	; 0x80014b <long_bmp180_AC4+0x1>
     78e:	60 93 4c 01 	sts	0x014C, r22	; 0x80014c <long_bmp180_AC4+0x2>
     792:	70 93 4d 01 	sts	0x014D, r23	; 0x80014d <long_bmp180_AC4+0x3>
     796:	00 91 50 01 	lds	r16, 0x0150	; 0x800150 <bmp180_AC5>
     79a:	10 91 51 01 	lds	r17, 0x0151	; 0x800151 <bmp180_AC5+0x1>
     79e:	20 e0       	ldi	r18, 0x00	; 0
     7a0:	30 e0       	ldi	r19, 0x00	; 0
     7a2:	00 93 46 01 	sts	0x0146, r16	; 0x800146 <long_bmp180_AC5>
     7a6:	10 93 47 01 	sts	0x0147, r17	; 0x800147 <long_bmp180_AC5+0x1>
     7aa:	20 93 48 01 	sts	0x0148, r18	; 0x800148 <long_bmp180_AC5+0x2>
     7ae:	30 93 49 01 	sts	0x0149, r19	; 0x800149 <long_bmp180_AC5+0x3>
     7b2:	a0 e0       	ldi	r26, 0x00	; 0
     7b4:	b0 e0       	ldi	r27, 0x00	; 0
     7b6:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <long_bmp180_AC6>
     7ba:	90 93 43 01 	sts	0x0143, r25	; 0x800143 <long_bmp180_AC6+0x1>
     7be:	a0 93 44 01 	sts	0x0144, r26	; 0x800144 <long_bmp180_AC6+0x2>
     7c2:	b0 93 45 01 	sts	0x0145, r27	; 0x800145 <long_bmp180_AC6+0x3>
     7c6:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <bmp180_B2>
     7ca:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <bmp180_B2+0x1>
     7ce:	09 2e       	mov	r0, r25
     7d0:	00 0c       	add	r0, r0
     7d2:	aa 0b       	sbc	r26, r26
     7d4:	bb 0b       	sbc	r27, r27
     7d6:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <long_bmp180_B2>
     7da:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <long_bmp180_B2+0x1>
     7de:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <long_bmp180_B2+0x2>
     7e2:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <long_bmp180_B2+0x3>
     7e6:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <bmp180_AC2>
     7ea:	90 91 65 01 	lds	r25, 0x0165	; 0x800165 <bmp180_AC2+0x1>
     7ee:	09 2e       	mov	r0, r25
     7f0:	00 0c       	add	r0, r0
     7f2:	aa 0b       	sbc	r26, r26
     7f4:	bb 0b       	sbc	r27, r27
     7f6:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <long_bmp180_AC2>
     7fa:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <long_bmp180_AC2+0x1>
     7fe:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <long_bmp180_AC2+0x2>
     802:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <long_bmp180_AC2+0x3>
     806:	80 91 66 01 	lds	r24, 0x0166	; 0x800166 <bmp180_AC1>
     80a:	90 91 67 01 	lds	r25, 0x0167	; 0x800167 <bmp180_AC1+0x1>
     80e:	09 2e       	mov	r0, r25
     810:	00 0c       	add	r0, r0
     812:	aa 0b       	sbc	r26, r26
     814:	bb 0b       	sbc	r27, r27
     816:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <long_bmp180_AC1>
     81a:	90 93 33 01 	sts	0x0133, r25	; 0x800133 <long_bmp180_AC1+0x1>
     81e:	a0 93 34 01 	sts	0x0134, r26	; 0x800134 <long_bmp180_AC1+0x2>
     822:	b0 93 35 01 	sts	0x0135, r27	; 0x800135 <long_bmp180_AC1+0x3>
     826:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <bmp180_AC3>
     82a:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <bmp180_AC3+0x1>
     82e:	09 2e       	mov	r0, r25
     830:	00 0c       	add	r0, r0
     832:	aa 0b       	sbc	r26, r26
     834:	bb 0b       	sbc	r27, r27
     836:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <long_bmp180_AC3>
     83a:	90 93 2f 01 	sts	0x012F, r25	; 0x80012f <long_bmp180_AC3+0x1>
     83e:	a0 93 30 01 	sts	0x0130, r26	; 0x800130 <long_bmp180_AC3+0x2>
     842:	b0 93 31 01 	sts	0x0131, r27	; 0x800131 <long_bmp180_AC3+0x3>
     846:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <bmp180_B1>
     84a:	90 91 61 01 	lds	r25, 0x0161	; 0x800161 <bmp180_B1+0x1>
     84e:	09 2e       	mov	r0, r25
     850:	00 0c       	add	r0, r0
     852:	aa 0b       	sbc	r26, r26
     854:	bb 0b       	sbc	r27, r27
     856:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <long_bmp180_B1>
     85a:	90 93 2b 01 	sts	0x012B, r25	; 0x80012b <long_bmp180_B1+0x1>
     85e:	a0 93 2c 01 	sts	0x012C, r26	; 0x80012c <long_bmp180_B1+0x2>
     862:	b0 93 2d 01 	sts	0x012D, r27	; 0x80012d <long_bmp180_B1+0x3>
     866:	40 93 26 01 	sts	0x0126, r20	; 0x800126 <ulong_bmp180_AC4>
     86a:	50 93 27 01 	sts	0x0127, r21	; 0x800127 <ulong_bmp180_AC4+0x1>
     86e:	60 93 28 01 	sts	0x0128, r22	; 0x800128 <ulong_bmp180_AC4+0x2>
     872:	70 93 29 01 	sts	0x0129, r23	; 0x800129 <ulong_bmp180_AC4+0x3>
     876:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <bmp180_MC>
     87a:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <bmp180_MC+0x1>
     87e:	99 23       	and	r25, r25
     880:	6c f0       	brlt	.+26     	; 0x89c <_Z20bmp180_get_cal_paramv+0x2b8>
     882:	09 2e       	mov	r0, r25
     884:	00 0c       	add	r0, r0
     886:	aa 0b       	sbc	r26, r26
     888:	bb 0b       	sbc	r27, r27
     88a:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <abs_bmp180_MC>
     88e:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <abs_bmp180_MC+0x1>
     892:	a0 93 56 01 	sts	0x0156, r26	; 0x800156 <abs_bmp180_MC+0x2>
     896:	b0 93 57 01 	sts	0x0157, r27	; 0x800157 <abs_bmp180_MC+0x3>
     89a:	0f c0       	rjmp	.+30     	; 0x8ba <_Z20bmp180_get_cal_paramv+0x2d6>
     89c:	91 95       	neg	r25
     89e:	81 95       	neg	r24
     8a0:	91 09       	sbc	r25, r1
     8a2:	09 2e       	mov	r0, r25
     8a4:	00 0c       	add	r0, r0
     8a6:	aa 0b       	sbc	r26, r26
     8a8:	bb 0b       	sbc	r27, r27
     8aa:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <abs_bmp180_MC>
     8ae:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <abs_bmp180_MC+0x1>
     8b2:	a0 93 56 01 	sts	0x0156, r26	; 0x800156 <abs_bmp180_MC+0x2>
     8b6:	b0 93 57 01 	sts	0x0157, r27	; 0x800157 <abs_bmp180_MC+0x3>
     8ba:	cf 91       	pop	r28
     8bc:	1f 91       	pop	r17
     8be:	0f 91       	pop	r16
     8c0:	08 95       	ret

000008c2 <_Z13bmp180_get_utv>:
     8c2:	cf 93       	push	r28
     8c4:	4e e2       	ldi	r20, 0x2E	; 46
     8c6:	64 ef       	ldi	r22, 0xF4	; 244
     8c8:	87 e7       	ldi	r24, 0x77	; 119
     8ca:	0e 94 c6 00 	call	0x18c	; 0x18c <_Z14TWI_write_bytehhh>
     8ce:	80 e0       	ldi	r24, 0x00	; 0
     8d0:	90 e0       	ldi	r25, 0x00	; 0
     8d2:	00 00       	nop
     8d4:	01 96       	adiw	r24, 0x01	; 1
     8d6:	88 3c       	cpi	r24, 0xC8	; 200
     8d8:	2f ea       	ldi	r18, 0xAF	; 175
     8da:	92 07       	cpc	r25, r18
     8dc:	d1 f7       	brne	.-12     	; 0x8d2 <_Z13bmp180_get_utv+0x10>
     8de:	66 ef       	ldi	r22, 0xF6	; 246
     8e0:	87 e7       	ldi	r24, 0x77	; 119
     8e2:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_Z13TWI_read_bytehh>
     8e6:	c8 2f       	mov	r28, r24
     8e8:	67 ef       	ldi	r22, 0xF7	; 247
     8ea:	87 e7       	ldi	r24, 0x77	; 119
     8ec:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_Z13TWI_read_bytehh>
     8f0:	2c 2f       	mov	r18, r28
     8f2:	30 e0       	ldi	r19, 0x00	; 0
     8f4:	32 2f       	mov	r19, r18
     8f6:	22 27       	eor	r18, r18
     8f8:	a9 01       	movw	r20, r18
     8fa:	48 2b       	or	r20, r24
     8fc:	ca 01       	movw	r24, r20
     8fe:	09 2e       	mov	r0, r25
     900:	00 0c       	add	r0, r0
     902:	aa 0b       	sbc	r26, r26
     904:	bb 0b       	sbc	r27, r27
     906:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <bmp180_UT>
     90a:	90 93 23 01 	sts	0x0123, r25	; 0x800123 <bmp180_UT+0x1>
     90e:	a0 93 24 01 	sts	0x0124, r26	; 0x800124 <bmp180_UT+0x2>
     912:	b0 93 25 01 	sts	0x0125, r27	; 0x800125 <bmp180_UT+0x3>
     916:	cf 91       	pop	r28
     918:	08 95       	ret

0000091a <_Z22bmp180_get_temperaturev>:

void bmp180_get_temperature()
{
     91a:	cf 92       	push	r12
     91c:	df 92       	push	r13
     91e:	ef 92       	push	r14
     920:	ff 92       	push	r15
     922:	0f 93       	push	r16
     924:	1f 93       	push	r17
	long X1 = ( ( bmp180_UT - long_bmp180_AC6 ) * long_bmp180_AC5 ) >> 15;
     926:	40 91 22 01 	lds	r20, 0x0122	; 0x800122 <bmp180_UT>
     92a:	50 91 23 01 	lds	r21, 0x0123	; 0x800123 <bmp180_UT+0x1>
     92e:	60 91 24 01 	lds	r22, 0x0124	; 0x800124 <bmp180_UT+0x2>
     932:	70 91 25 01 	lds	r23, 0x0125	; 0x800125 <bmp180_UT+0x3>
     936:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <long_bmp180_AC6>
     93a:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <long_bmp180_AC6+0x1>
     93e:	a0 91 44 01 	lds	r26, 0x0144	; 0x800144 <long_bmp180_AC6+0x2>
     942:	b0 91 45 01 	lds	r27, 0x0145	; 0x800145 <long_bmp180_AC6+0x3>
     946:	9a 01       	movw	r18, r20
     948:	ab 01       	movw	r20, r22
     94a:	28 1b       	sub	r18, r24
     94c:	39 0b       	sbc	r19, r25
     94e:	4a 0b       	sbc	r20, r26
     950:	5b 0b       	sbc	r21, r27
     952:	60 91 46 01 	lds	r22, 0x0146	; 0x800146 <long_bmp180_AC5>
     956:	70 91 47 01 	lds	r23, 0x0147	; 0x800147 <long_bmp180_AC5+0x1>
     95a:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <long_bmp180_AC5+0x2>
     95e:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <long_bmp180_AC5+0x3>
     962:	0e 94 24 09 	call	0x1248	; 0x1248 <__mulsi3>
     966:	6b 01       	movw	r12, r22
     968:	7c 01       	movw	r14, r24
     96a:	0b 2e       	mov	r0, r27
     96c:	bf e0       	ldi	r27, 0x0F	; 15
     96e:	f5 94       	asr	r15
     970:	e7 94       	ror	r14
     972:	d7 94       	ror	r13
     974:	c7 94       	ror	r12
     976:	ba 95       	dec	r27
     978:	d1 f7       	brne	.-12     	; 0x96e <_Z22bmp180_get_temperaturev+0x54>
     97a:	b0 2d       	mov	r27, r0
	
	long X2_1 = abs_bmp180_MC << 11;
     97c:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <abs_bmp180_MC>
     980:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <abs_bmp180_MC+0x1>
     984:	a0 91 56 01 	lds	r26, 0x0156	; 0x800156 <abs_bmp180_MC+0x2>
     988:	b0 91 57 01 	lds	r27, 0x0157	; 0x800157 <abs_bmp180_MC+0x3>
     98c:	07 2e       	mov	r0, r23
     98e:	7b e0       	ldi	r23, 0x0B	; 11
     990:	88 0f       	add	r24, r24
     992:	99 1f       	adc	r25, r25
     994:	aa 1f       	adc	r26, r26
     996:	bb 1f       	adc	r27, r27
     998:	7a 95       	dec	r23
     99a:	d1 f7       	brne	.-12     	; 0x990 <_Z22bmp180_get_temperaturev+0x76>
     99c:	70 2d       	mov	r23, r0
	long X2_2 = X1 + bmp180_MD;
     99e:	40 91 58 01 	lds	r20, 0x0158	; 0x800158 <bmp180_MD>
     9a2:	50 91 59 01 	lds	r21, 0x0159	; 0x800159 <bmp180_MD+0x1>
     9a6:	05 2e       	mov	r0, r21
     9a8:	00 0c       	add	r0, r0
     9aa:	66 0b       	sbc	r22, r22
     9ac:	77 0b       	sbc	r23, r23
     9ae:	4c 0d       	add	r20, r12
     9b0:	5d 1d       	adc	r21, r13
     9b2:	6e 1d       	adc	r22, r14
     9b4:	7f 1d       	adc	r23, r15
long long_div(long A, long B)
{
	long result_div = 0;
	long dif = A;
	
	while (dif >= B)
     9b6:	84 17       	cp	r24, r20
     9b8:	95 07       	cpc	r25, r21
     9ba:	a6 07       	cpc	r26, r22
     9bc:	b7 07       	cpc	r27, r23
     9be:	8c f0       	brlt	.+34     	; 0x9e2 <_Z22bmp180_get_temperaturev+0xc8>
     9c0:	00 e0       	ldi	r16, 0x00	; 0
     9c2:	10 e0       	ldi	r17, 0x00	; 0
     9c4:	98 01       	movw	r18, r16
	{
		result_div++;
     9c6:	0f 5f       	subi	r16, 0xFF	; 255
     9c8:	1f 4f       	sbci	r17, 0xFF	; 255
     9ca:	2f 4f       	sbci	r18, 0xFF	; 255
     9cc:	3f 4f       	sbci	r19, 0xFF	; 255
		dif = dif - B;
     9ce:	84 1b       	sub	r24, r20
     9d0:	95 0b       	sbc	r25, r21
     9d2:	a6 0b       	sbc	r26, r22
     9d4:	b7 0b       	sbc	r27, r23
long long_div(long A, long B)
{
	long result_div = 0;
	long dif = A;
	
	while (dif >= B)
     9d6:	84 17       	cp	r24, r20
     9d8:	95 07       	cpc	r25, r21
     9da:	a6 07       	cpc	r26, r22
     9dc:	b7 07       	cpc	r27, r23
     9de:	9c f7       	brge	.-26     	; 0x9c6 <_Z22bmp180_get_temperaturev+0xac>
     9e0:	03 c0       	rjmp	.+6      	; 0x9e8 <_Z22bmp180_get_temperaturev+0xce>
	bmp180_UT = ( TWI_read_byte(bmp180_add, bmp180_reg_out_msb) )<<8 | (TWI_read_byte(bmp180_add, bmp180_reg_out_lsb));
}

long long_div(long A, long B)
{
	long result_div = 0;
     9e2:	00 e0       	ldi	r16, 0x00	; 0
     9e4:	10 e0       	ldi	r17, 0x00	; 0
     9e6:	98 01       	movw	r18, r16
	
	long X2_1 = abs_bmp180_MC << 11;
	long X2_2 = X1 + bmp180_MD;
	long X2 = long_div( X2_1, X2_2);
	
	B5 = X1 - X2;
     9e8:	d7 01       	movw	r26, r14
     9ea:	c6 01       	movw	r24, r12
     9ec:	80 1b       	sub	r24, r16
     9ee:	91 0b       	sbc	r25, r17
     9f0:	a2 0b       	sbc	r26, r18
     9f2:	b3 0b       	sbc	r27, r19
     9f4:	80 93 3e 01 	sts	0x013E, r24	; 0x80013e <B5>
     9f8:	90 93 3f 01 	sts	0x013F, r25	; 0x80013f <B5+0x1>
     9fc:	a0 93 40 01 	sts	0x0140, r26	; 0x800140 <B5+0x2>
     a00:	b0 93 41 01 	sts	0x0141, r27	; 0x800141 <B5+0x3>
	
	bmp180_temp = (B5 + 8) >> 4;
     a04:	08 96       	adiw	r24, 0x08	; 8
     a06:	a1 1d       	adc	r26, r1
     a08:	b1 1d       	adc	r27, r1
     a0a:	68 94       	set
     a0c:	13 f8       	bld	r1, 3
     a0e:	b5 95       	asr	r27
     a10:	a7 95       	ror	r26
     a12:	97 95       	ror	r25
     a14:	87 95       	ror	r24
     a16:	16 94       	lsr	r1
     a18:	d1 f7       	brne	.-12     	; 0xa0e <_Z22bmp180_get_temperaturev+0xf4>
     a1a:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <bmp180_temp>
     a1e:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <bmp180_temp+0x1>
     a22:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <bmp180_temp+0x2>
     a26:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <bmp180_temp+0x3>
}
     a2a:	1f 91       	pop	r17
     a2c:	0f 91       	pop	r16
     a2e:	ff 90       	pop	r15
     a30:	ef 90       	pop	r14
     a32:	df 90       	pop	r13
     a34:	cf 90       	pop	r12
     a36:	08 95       	ret

00000a38 <_Z13bmp180_get_upv>:

void bmp180_get_up()
{
     a38:	0f 93       	push	r16
     a3a:	1f 93       	push	r17
     a3c:	cf 93       	push	r28
	//byte byte_oss = 0;
	TWI_write_byte(bmp180_add, bmp180_reg_ctrl_meas, 0x34);
     a3e:	44 e3       	ldi	r20, 0x34	; 52
     a40:	64 ef       	ldi	r22, 0xF4	; 244
     a42:	87 e7       	ldi	r24, 0x77	; 119
     a44:	0e 94 c6 00 	call	0x18c	; 0x18c <_Z14TWI_write_bytehhh>
     a48:	80 e0       	ldi	r24, 0x00	; 0
     a4a:	90 e0       	ldi	r25, 0x00	; 0
	
	for(unsigned long i = 0;i<45000;i++)
	{
		asm volatile("nop");
     a4c:	00 00       	nop
     a4e:	01 96       	adiw	r24, 0x01	; 1
void bmp180_get_up()
{
	//byte byte_oss = 0;
	TWI_write_byte(bmp180_add, bmp180_reg_ctrl_meas, 0x34);
	
	for(unsigned long i = 0;i<45000;i++)
     a50:	88 3c       	cpi	r24, 0xC8	; 200
     a52:	0f ea       	ldi	r16, 0xAF	; 175
     a54:	90 07       	cpc	r25, r16
     a56:	d1 f7       	brne	.-12     	; 0xa4c <_Z13bmp180_get_upv+0x14>
	{
		asm volatile("nop");
	}
	
	long buffer_MSB = TWI_read_byte(bmp180_add, bmp180_reg_out_msb);
     a58:	66 ef       	ldi	r22, 0xF6	; 246
     a5a:	87 e7       	ldi	r24, 0x77	; 119
     a5c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_Z13TWI_read_bytehh>
     a60:	c8 2f       	mov	r28, r24
	long buffer_LSB = TWI_read_byte(bmp180_add, bmp180_reg_out_lsb);
     a62:	67 ef       	ldi	r22, 0xF7	; 247
     a64:	87 e7       	ldi	r24, 0x77	; 119
     a66:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_Z13TWI_read_bytehh>
	//long buffer_XLSB = TWI_read_byte(bmp180_add, bmp180_reg_out_xlsb);

	bmp180_UP = (buffer_MSB << 8) + (buffer_LSB);// + (buffer_XLSB);
     a6a:	4c 2f       	mov	r20, r28
     a6c:	50 e0       	ldi	r21, 0x00	; 0
     a6e:	60 e0       	ldi	r22, 0x00	; 0
     a70:	70 e0       	ldi	r23, 0x00	; 0
     a72:	76 2f       	mov	r23, r22
     a74:	65 2f       	mov	r22, r21
     a76:	54 2f       	mov	r21, r20
     a78:	44 27       	eor	r20, r20
     a7a:	8a 01       	movw	r16, r20
     a7c:	9b 01       	movw	r18, r22
     a7e:	08 0f       	add	r16, r24
     a80:	11 1d       	adc	r17, r1
     a82:	21 1d       	adc	r18, r1
     a84:	31 1d       	adc	r19, r1
     a86:	00 93 1a 01 	sts	0x011A, r16	; 0x80011a <bmp180_UP>
     a8a:	10 93 1b 01 	sts	0x011B, r17	; 0x80011b <bmp180_UP+0x1>
     a8e:	20 93 1c 01 	sts	0x011C, r18	; 0x80011c <bmp180_UP+0x2>
     a92:	30 93 1d 01 	sts	0x011D, r19	; 0x80011d <bmp180_UP+0x3>
	
	ulong_bmp180_UP = bmp180_UP;
     a96:	00 93 0a 01 	sts	0x010A, r16	; 0x80010a <ulong_bmp180_UP>
     a9a:	10 93 0b 01 	sts	0x010B, r17	; 0x80010b <ulong_bmp180_UP+0x1>
     a9e:	20 93 0c 01 	sts	0x010C, r18	; 0x80010c <ulong_bmp180_UP+0x2>
     aa2:	30 93 0d 01 	sts	0x010D, r19	; 0x80010d <ulong_bmp180_UP+0x3>
	//UART_write_long( bmp180_UP );
}
     aa6:	cf 91       	pop	r28
     aa8:	1f 91       	pop	r17
     aaa:	0f 91       	pop	r16
     aac:	08 95       	ret

00000aae <_Z19bmp180_get_pressurev>:

void bmp180_get_pressure()
{
     aae:	4f 92       	push	r4
     ab0:	5f 92       	push	r5
     ab2:	6f 92       	push	r6
     ab4:	7f 92       	push	r7
     ab6:	8f 92       	push	r8
     ab8:	9f 92       	push	r9
     aba:	af 92       	push	r10
     abc:	bf 92       	push	r11
     abe:	cf 92       	push	r12
     ac0:	df 92       	push	r13
     ac2:	ef 92       	push	r14
     ac4:	ff 92       	push	r15
     ac6:	0f 93       	push	r16
     ac8:	1f 93       	push	r17
     aca:	cf 93       	push	r28
     acc:	df 93       	push	r29
     ace:	00 d0       	rcall	.+0      	; 0xad0 <_Z19bmp180_get_pressurev+0x22>
     ad0:	00 d0       	rcall	.+0      	; 0xad2 <_Z19bmp180_get_pressurev+0x24>
     ad2:	cd b7       	in	r28, 0x3d	; 61
     ad4:	de b7       	in	r29, 0x3e	; 62
	long long_B6 = B5 - 4000;
     ad6:	40 90 3e 01 	lds	r4, 0x013E	; 0x80013e <B5>
     ada:	50 90 3f 01 	lds	r5, 0x013F	; 0x80013f <B5+0x1>
     ade:	60 90 40 01 	lds	r6, 0x0140	; 0x800140 <B5+0x2>
     ae2:	70 90 41 01 	lds	r7, 0x0141	; 0x800141 <B5+0x3>
     ae6:	d3 01       	movw	r26, r6
     ae8:	c2 01       	movw	r24, r4
     aea:	80 5a       	subi	r24, 0xA0	; 160
     aec:	9f 40       	sbci	r25, 0x0F	; 15
     aee:	a1 09       	sbc	r26, r1
     af0:	b1 09       	sbc	r27, r1
     af2:	89 83       	std	Y+1, r24	; 0x01
     af4:	9a 83       	std	Y+2, r25	; 0x02
     af6:	ab 83       	std	Y+3, r26	; 0x03
     af8:	bc 83       	std	Y+4, r27	; 0x04
	
	
	long X1 = ( long_bmp180_B2 * ((long_B6 * long_B6) >> 12) ) >> 11;
     afa:	9c 01       	movw	r18, r24
     afc:	ad 01       	movw	r20, r26
     afe:	bc 01       	movw	r22, r24
     b00:	cd 01       	movw	r24, r26
     b02:	0e 94 24 09 	call	0x1248	; 0x1248 <__mulsi3>
     b06:	2b 01       	movw	r4, r22
     b08:	3c 01       	movw	r6, r24
     b0a:	03 2e       	mov	r0, r19
     b0c:	3c e0       	ldi	r19, 0x0C	; 12
     b0e:	75 94       	asr	r7
     b10:	67 94       	ror	r6
     b12:	57 94       	ror	r5
     b14:	47 94       	ror	r4
     b16:	3a 95       	dec	r19
     b18:	d1 f7       	brne	.-12     	; 0xb0e <_Z19bmp180_get_pressurev+0x60>
     b1a:	30 2d       	mov	r19, r0
	long X2 = (long_bmp180_AC2 * long_B6) >> 11;// / 2^11;
	long X3 = X1 + X2;
	long B3 = ((long_bmp180_AC1<<2) + X3 + 2) >> 2;
	
	X1 = (long_bmp180_AC3*long_B6)>>13;
     b1c:	60 91 2e 01 	lds	r22, 0x012E	; 0x80012e <long_bmp180_AC3>
     b20:	70 91 2f 01 	lds	r23, 0x012F	; 0x80012f <long_bmp180_AC3+0x1>
     b24:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <long_bmp180_AC3+0x2>
     b28:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <long_bmp180_AC3+0x3>
     b2c:	0e 94 24 09 	call	0x1248	; 0x1248 <__mulsi3>
     b30:	4b 01       	movw	r8, r22
     b32:	5c 01       	movw	r10, r24
     b34:	07 2e       	mov	r0, r23
     b36:	7d e0       	ldi	r23, 0x0D	; 13
     b38:	b5 94       	asr	r11
     b3a:	a7 94       	ror	r10
     b3c:	97 94       	ror	r9
     b3e:	87 94       	ror	r8
     b40:	7a 95       	dec	r23
     b42:	d1 f7       	brne	.-12     	; 0xb38 <_Z19bmp180_get_pressurev+0x8a>
     b44:	70 2d       	mov	r23, r0
	X2 = ( long_bmp180_B1 * ((long_B6 * long_B6) >> 12) ) >> 16;
	X3 = ((X1 + X2) + 2) >>2 ;
	
	long X3_1 = X3 + 32768;
	unsigned long ulong_X3_1 = X3_1;
	unsigned long B4 = (ulong_bmp180_AC4 * ulong_X3_1) >> 15;
     b46:	60 91 2a 01 	lds	r22, 0x012A	; 0x80012a <long_bmp180_B1>
     b4a:	70 91 2b 01 	lds	r23, 0x012B	; 0x80012b <long_bmp180_B1+0x1>
     b4e:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <long_bmp180_B1+0x2>
     b52:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <long_bmp180_B1+0x3>
     b56:	a3 01       	movw	r20, r6
     b58:	92 01       	movw	r18, r4
     b5a:	0e 94 24 09 	call	0x1248	; 0x1248 <__mulsi3>
     b5e:	bb 27       	eor	r27, r27
     b60:	97 fd       	sbrc	r25, 7
     b62:	b0 95       	com	r27
     b64:	ab 2f       	mov	r26, r27
     b66:	88 0d       	add	r24, r8
     b68:	99 1d       	adc	r25, r9
     b6a:	aa 1d       	adc	r26, r10
     b6c:	bb 1d       	adc	r27, r11
     b6e:	02 96       	adiw	r24, 0x02	; 2
     b70:	a1 1d       	adc	r26, r1
     b72:	b1 1d       	adc	r27, r1
     b74:	b5 95       	asr	r27
     b76:	a7 95       	ror	r26
     b78:	97 95       	ror	r25
     b7a:	87 95       	ror	r24
     b7c:	b5 95       	asr	r27
     b7e:	a7 95       	ror	r26
     b80:	97 95       	ror	r25
     b82:	87 95       	ror	r24
     b84:	9c 01       	movw	r18, r24
     b86:	ad 01       	movw	r20, r26
     b88:	30 58       	subi	r19, 0x80	; 128
     b8a:	4f 4f       	sbci	r20, 0xFF	; 255
     b8c:	5f 4f       	sbci	r21, 0xFF	; 255
     b8e:	60 91 26 01 	lds	r22, 0x0126	; 0x800126 <ulong_bmp180_AC4>
     b92:	70 91 27 01 	lds	r23, 0x0127	; 0x800127 <ulong_bmp180_AC4+0x1>
     b96:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <ulong_bmp180_AC4+0x2>
     b9a:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <ulong_bmp180_AC4+0x3>
     b9e:	0e 94 24 09 	call	0x1248	; 0x1248 <__mulsi3>
     ba2:	6b 01       	movw	r12, r22
     ba4:	7c 01       	movw	r14, r24
     ba6:	0b 2e       	mov	r0, r27
     ba8:	bf e0       	ldi	r27, 0x0F	; 15
     baa:	f6 94       	lsr	r15
     bac:	e7 94       	ror	r14
     bae:	d7 94       	ror	r13
     bb0:	c7 94       	ror	r12
     bb2:	ba 95       	dec	r27
     bb4:	d1 f7       	brne	.-12     	; 0xbaa <_Z19bmp180_get_pressurev+0xfc>
     bb6:	b0 2d       	mov	r27, r0
	
	unsigned long ulong_B3 = B3;
	unsigned long B7 = (ulong_bmp180_UP - ulong_B3) * 50000;
     bb8:	60 91 3a 01 	lds	r22, 0x013A	; 0x80013a <long_bmp180_B2>
     bbc:	70 91 3b 01 	lds	r23, 0x013B	; 0x80013b <long_bmp180_B2+0x1>
     bc0:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <long_bmp180_B2+0x2>
     bc4:	90 91 3d 01 	lds	r25, 0x013D	; 0x80013d <long_bmp180_B2+0x3>
     bc8:	a3 01       	movw	r20, r6
     bca:	92 01       	movw	r18, r4
     bcc:	0e 94 24 09 	call	0x1248	; 0x1248 <__mulsi3>
     bd0:	2b 01       	movw	r4, r22
     bd2:	3c 01       	movw	r6, r24
     bd4:	03 2e       	mov	r0, r19
     bd6:	3b e0       	ldi	r19, 0x0B	; 11
     bd8:	75 94       	asr	r7
     bda:	67 94       	ror	r6
     bdc:	57 94       	ror	r5
     bde:	47 94       	ror	r4
     be0:	3a 95       	dec	r19
     be2:	d1 f7       	brne	.-12     	; 0xbd8 <_Z19bmp180_get_pressurev+0x12a>
     be4:	30 2d       	mov	r19, r0
     be6:	60 91 36 01 	lds	r22, 0x0136	; 0x800136 <long_bmp180_AC2>
     bea:	70 91 37 01 	lds	r23, 0x0137	; 0x800137 <long_bmp180_AC2+0x1>
     bee:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <long_bmp180_AC2+0x2>
     bf2:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <long_bmp180_AC2+0x3>
     bf6:	29 81       	ldd	r18, Y+1	; 0x01
     bf8:	3a 81       	ldd	r19, Y+2	; 0x02
     bfa:	4b 81       	ldd	r20, Y+3	; 0x03
     bfc:	5c 81       	ldd	r21, Y+4	; 0x04
     bfe:	0e 94 24 09 	call	0x1248	; 0x1248 <__mulsi3>
     c02:	dc 01       	movw	r26, r24
     c04:	cb 01       	movw	r24, r22
     c06:	07 2e       	mov	r0, r23
     c08:	7b e0       	ldi	r23, 0x0B	; 11
     c0a:	b5 95       	asr	r27
     c0c:	a7 95       	ror	r26
     c0e:	97 95       	ror	r25
     c10:	87 95       	ror	r24
     c12:	7a 95       	dec	r23
     c14:	d1 f7       	brne	.-12     	; 0xc0a <_Z19bmp180_get_pressurev+0x15c>
     c16:	70 2d       	mov	r23, r0
     c18:	84 0d       	add	r24, r4
     c1a:	95 1d       	adc	r25, r5
     c1c:	a6 1d       	adc	r26, r6
     c1e:	b7 1d       	adc	r27, r7
     c20:	40 91 32 01 	lds	r20, 0x0132	; 0x800132 <long_bmp180_AC1>
     c24:	50 91 33 01 	lds	r21, 0x0133	; 0x800133 <long_bmp180_AC1+0x1>
     c28:	60 91 34 01 	lds	r22, 0x0134	; 0x800134 <long_bmp180_AC1+0x2>
     c2c:	70 91 35 01 	lds	r23, 0x0135	; 0x800135 <long_bmp180_AC1+0x3>
     c30:	44 0f       	add	r20, r20
     c32:	55 1f       	adc	r21, r21
     c34:	66 1f       	adc	r22, r22
     c36:	77 1f       	adc	r23, r23
     c38:	44 0f       	add	r20, r20
     c3a:	55 1f       	adc	r21, r21
     c3c:	66 1f       	adc	r22, r22
     c3e:	77 1f       	adc	r23, r23
     c40:	84 0f       	add	r24, r20
     c42:	95 1f       	adc	r25, r21
     c44:	a6 1f       	adc	r26, r22
     c46:	b7 1f       	adc	r27, r23
     c48:	02 96       	adiw	r24, 0x02	; 2
     c4a:	a1 1d       	adc	r26, r1
     c4c:	b1 1d       	adc	r27, r1
     c4e:	b5 95       	asr	r27
     c50:	a7 95       	ror	r26
     c52:	97 95       	ror	r25
     c54:	87 95       	ror	r24
     c56:	b5 95       	asr	r27
     c58:	a7 95       	ror	r26
     c5a:	97 95       	ror	r25
     c5c:	87 95       	ror	r24
     c5e:	40 91 0a 01 	lds	r20, 0x010A	; 0x80010a <ulong_bmp180_UP>
     c62:	50 91 0b 01 	lds	r21, 0x010B	; 0x80010b <ulong_bmp180_UP+0x1>
     c66:	60 91 0c 01 	lds	r22, 0x010C	; 0x80010c <ulong_bmp180_UP+0x2>
     c6a:	70 91 0d 01 	lds	r23, 0x010D	; 0x80010d <ulong_bmp180_UP+0x3>
     c6e:	9a 01       	movw	r18, r20
     c70:	ab 01       	movw	r20, r22
     c72:	28 1b       	sub	r18, r24
     c74:	39 0b       	sbc	r19, r25
     c76:	4a 0b       	sbc	r20, r26
     c78:	5b 0b       	sbc	r21, r27
     c7a:	a0 e5       	ldi	r26, 0x50	; 80
     c7c:	b3 ec       	ldi	r27, 0xC3	; 195
     c7e:	0e 94 8f 09 	call	0x131e	; 0x131e <__muluhisi3>
unsigned long ulong_div(unsigned long A, unsigned long B)
{
	unsigned long result_div = 0;
	unsigned long dif = A;
	
	while (dif >= B)
     c82:	6c 15       	cp	r22, r12
     c84:	7d 05       	cpc	r23, r13
     c86:	8e 05       	cpc	r24, r14
     c88:	9f 05       	cpc	r25, r15
     c8a:	88 f0       	brcs	.+34     	; 0xcae <_Z19bmp180_get_pressurev+0x200>
     c8c:	00 e0       	ldi	r16, 0x00	; 0
     c8e:	10 e0       	ldi	r17, 0x00	; 0
     c90:	98 01       	movw	r18, r16
	{
		result_div++;
     c92:	0f 5f       	subi	r16, 0xFF	; 255
     c94:	1f 4f       	sbci	r17, 0xFF	; 255
     c96:	2f 4f       	sbci	r18, 0xFF	; 255
     c98:	3f 4f       	sbci	r19, 0xFF	; 255
		dif = dif - B;
     c9a:	6c 19       	sub	r22, r12
     c9c:	7d 09       	sbc	r23, r13
     c9e:	8e 09       	sbc	r24, r14
     ca0:	9f 09       	sbc	r25, r15
unsigned long ulong_div(unsigned long A, unsigned long B)
{
	unsigned long result_div = 0;
	unsigned long dif = A;
	
	while (dif >= B)
     ca2:	6c 15       	cp	r22, r12
     ca4:	7d 05       	cpc	r23, r13
     ca6:	8e 05       	cpc	r24, r14
     ca8:	9f 05       	cpc	r25, r15
     caa:	98 f7       	brcc	.-26     	; 0xc92 <_Z19bmp180_get_pressurev+0x1e4>
     cac:	03 c0       	rjmp	.+6      	; 0xcb4 <_Z19bmp180_get_pressurev+0x206>
	return result_div;
}

unsigned long ulong_div(unsigned long A, unsigned long B)
{
	unsigned long result_div = 0;
     cae:	00 e0       	ldi	r16, 0x00	; 0
     cb0:	10 e0       	ldi	r17, 0x00	; 0
     cb2:	98 01       	movw	r18, r16
	unsigned long B4 = (ulong_bmp180_AC4 * ulong_X3_1) >> 15;
	
	unsigned long ulong_B3 = B3;
	unsigned long B7 = (ulong_bmp180_UP - ulong_B3) * 50000;
	
	ulong_bmp180_press = ulong_div(B7, B4) << 1;
     cb4:	68 01       	movw	r12, r16
     cb6:	79 01       	movw	r14, r18
     cb8:	cc 0c       	add	r12, r12
     cba:	dd 1c       	adc	r13, r13
     cbc:	ee 1c       	adc	r14, r14
     cbe:	ff 1c       	adc	r15, r15
     cc0:	c0 92 0e 01 	sts	0x010E, r12	; 0x80010e <ulong_bmp180_press>
     cc4:	d0 92 0f 01 	sts	0x010F, r13	; 0x80010f <ulong_bmp180_press+0x1>
     cc8:	e0 92 10 01 	sts	0x0110, r14	; 0x800110 <ulong_bmp180_press+0x2>
     ccc:	f0 92 11 01 	sts	0x0111, r15	; 0x800111 <ulong_bmp180_press+0x3>
	ulong_X1 = (ulong_X1*3038) >> 16;
	
	long_bmp180_press = ulong_bmp180_press;
	X2 = (-7357 * long_bmp180_press) >> 16;
	
	long_bmp180_press = long_bmp180_press + ((X1 + X2 + 3791) >> 4);
     cd0:	a3 e4       	ldi	r26, 0x43	; 67
     cd2:	b3 ee       	ldi	r27, 0xE3	; 227
     cd4:	a7 01       	movw	r20, r14
     cd6:	96 01       	movw	r18, r12
     cd8:	0e 94 9d 09 	call	0x133a	; 0x133a <__mulohisi3>
     cdc:	8c 01       	movw	r16, r24
     cde:	33 27       	eor	r19, r19
     ce0:	17 fd       	sbrc	r17, 7
     ce2:	30 95       	com	r19
     ce4:	23 2f       	mov	r18, r19
     ce6:	08 0d       	add	r16, r8
     ce8:	19 1d       	adc	r17, r9
     cea:	2a 1d       	adc	r18, r10
     cec:	3b 1d       	adc	r19, r11
     cee:	01 53       	subi	r16, 0x31	; 49
     cf0:	11 4f       	sbci	r17, 0xF1	; 241
     cf2:	2f 4f       	sbci	r18, 0xFF	; 255
     cf4:	3f 4f       	sbci	r19, 0xFF	; 255
     cf6:	68 94       	set
     cf8:	13 f8       	bld	r1, 3
     cfa:	35 95       	asr	r19
     cfc:	27 95       	ror	r18
     cfe:	17 95       	ror	r17
     d00:	07 95       	ror	r16
     d02:	16 94       	lsr	r1
     d04:	d1 f7       	brne	.-12     	; 0xcfa <_Z19bmp180_get_pressurev+0x24c>
     d06:	0c 0d       	add	r16, r12
     d08:	1d 1d       	adc	r17, r13
     d0a:	2e 1d       	adc	r18, r14
     d0c:	3f 1d       	adc	r19, r15
     d0e:	00 93 12 01 	sts	0x0112, r16	; 0x800112 <long_bmp180_press>
     d12:	10 93 13 01 	sts	0x0113, r17	; 0x800113 <long_bmp180_press+0x1>
     d16:	20 93 14 01 	sts	0x0114, r18	; 0x800114 <long_bmp180_press+0x2>
     d1a:	30 93 15 01 	sts	0x0115, r19	; 0x800115 <long_bmp180_press+0x3>
	
	UART_write_short( bmp180_UT );
     d1e:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <bmp180_UT>
     d22:	90 91 23 01 	lds	r25, 0x0123	; 0x800123 <bmp180_UT+0x1>
     d26:	0e 94 87 00 	call	0x10e	; 0x10e <_Z16UART_write_shorts>
	UART_write_long( ulong_bmp180_UP );
     d2a:	60 91 0a 01 	lds	r22, 0x010A	; 0x80010a <ulong_bmp180_UP>
     d2e:	70 91 0b 01 	lds	r23, 0x010B	; 0x80010b <ulong_bmp180_UP+0x1>
     d32:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <ulong_bmp180_UP+0x2>
     d36:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <ulong_bmp180_UP+0x3>
     d3a:	0e 94 96 00 	call	0x12c	; 0x12c <_Z15UART_write_longl>
	
	UART_write_long( long_bmp180_press );
     d3e:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <long_bmp180_press>
     d42:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <long_bmp180_press+0x1>
     d46:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <long_bmp180_press+0x2>
     d4a:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <long_bmp180_press+0x3>
     d4e:	0e 94 96 00 	call	0x12c	; 0x12c <_Z15UART_write_longl>
	
	bmp180_press = long_bmp180_press / 10;
     d52:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <long_bmp180_press>
     d56:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <long_bmp180_press+0x1>
     d5a:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <long_bmp180_press+0x2>
     d5e:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <long_bmp180_press+0x3>
     d62:	2a e0       	ldi	r18, 0x0A	; 10
     d64:	30 e0       	ldi	r19, 0x00	; 0
     d66:	40 e0       	ldi	r20, 0x00	; 0
     d68:	50 e0       	ldi	r21, 0x00	; 0
     d6a:	0e 94 6a 09 	call	0x12d4	; 0x12d4 <__divmodsi4>
     d6e:	20 93 16 01 	sts	0x0116, r18	; 0x800116 <bmp180_press>
     d72:	30 93 17 01 	sts	0x0117, r19	; 0x800117 <bmp180_press+0x1>
     d76:	40 93 18 01 	sts	0x0118, r20	; 0x800118 <bmp180_press+0x2>
     d7a:	50 93 19 01 	sts	0x0119, r21	; 0x800119 <bmp180_press+0x3>
	
	//UART_write_short( long_bmp180_B2 );
	//UART_write_short( long_B6 );
	//UART_write_short( X1 );
	//UART_write_short( X3 );
     d7e:	0f 90       	pop	r0
     d80:	0f 90       	pop	r0
     d82:	0f 90       	pop	r0
     d84:	0f 90       	pop	r0
     d86:	df 91       	pop	r29
     d88:	cf 91       	pop	r28
     d8a:	1f 91       	pop	r17
     d8c:	0f 91       	pop	r16
     d8e:	ff 90       	pop	r15
     d90:	ef 90       	pop	r14
     d92:	df 90       	pop	r13
     d94:	cf 90       	pop	r12
     d96:	bf 90       	pop	r11
     d98:	af 90       	pop	r10
     d9a:	9f 90       	pop	r9
     d9c:	8f 90       	pop	r8
     d9e:	7f 90       	pop	r7
     da0:	6f 90       	pop	r6
     da2:	5f 90       	pop	r5
     da4:	4f 90       	pop	r4
     da6:	08 95       	ret

00000da8 <_Z9init_oledv>:
#define SSD1306_SWITCHCAPVCC 0x2
#define SSD1306_NOP 0xE3

void init_oled()
{
		TWI_write_byte(oled_add, 0x00, SSD1306_DISPLAYOFF);	
     da8:	4e ea       	ldi	r20, 0xAE	; 174
     daa:	60 e0       	ldi	r22, 0x00	; 0
     dac:	8c e3       	ldi	r24, 0x3C	; 60
     dae:	0e 94 c6 00 	call	0x18c	; 0x18c <_Z14TWI_write_bytehhh>
		
		TWI_write_byte(oled_add, 0x00, SSD1306_SETDISPLAYCLOCKDIV);
     db2:	45 ed       	ldi	r20, 0xD5	; 213
     db4:	60 e0       	ldi	r22, 0x00	; 0
     db6:	8c e3       	ldi	r24, 0x3C	; 60
     db8:	0e 94 c6 00 	call	0x18c	; 0x18c <_Z14TWI_write_bytehhh>
		TWI_write_byte(oled_add, 0x00, 0x80);
     dbc:	40 e8       	ldi	r20, 0x80	; 128
     dbe:	60 e0       	ldi	r22, 0x00	; 0
     dc0:	8c e3       	ldi	r24, 0x3C	; 60
     dc2:	0e 94 c6 00 	call	0x18c	; 0x18c <_Z14TWI_write_bytehhh>
		
		TWI_write_byte(oled_add, 0x00, SSD1306_SETMULTIPLEX);
     dc6:	48 ea       	ldi	r20, 0xA8	; 168
     dc8:	60 e0       	ldi	r22, 0x00	; 0
     dca:	8c e3       	ldi	r24, 0x3C	; 60
     dcc:	0e 94 c6 00 	call	0x18c	; 0x18c <_Z14TWI_write_bytehhh>
		TWI_write_byte(oled_add, 0x00, 0x3F);
     dd0:	4f e3       	ldi	r20, 0x3F	; 63
     dd2:	60 e0       	ldi	r22, 0x00	; 0
     dd4:	8c e3       	ldi	r24, 0x3C	; 60
     dd6:	0e 94 c6 00 	call	0x18c	; 0x18c <_Z14TWI_write_bytehhh>
		
		TWI_write_byte(oled_add, 0x00, SSD1306_SETDISPLAYOFFSET);
     dda:	43 ed       	ldi	r20, 0xD3	; 211
     ddc:	60 e0       	ldi	r22, 0x00	; 0
     dde:	8c e3       	ldi	r24, 0x3C	; 60
     de0:	0e 94 c6 00 	call	0x18c	; 0x18c <_Z14TWI_write_bytehhh>
		TWI_write_byte(oled_add, 0x00, 0x00);
     de4:	40 e0       	ldi	r20, 0x00	; 0
     de6:	60 e0       	ldi	r22, 0x00	; 0
     de8:	8c e3       	ldi	r24, 0x3C	; 60
     dea:	0e 94 c6 00 	call	0x18c	; 0x18c <_Z14TWI_write_bytehhh>
		
		TWI_write_byte(oled_add, 0x00, SSD1306_SETSTARTLINE | 0x00);
     dee:	40 e4       	ldi	r20, 0x40	; 64
     df0:	60 e0       	ldi	r22, 0x00	; 0
     df2:	8c e3       	ldi	r24, 0x3C	; 60
     df4:	0e 94 c6 00 	call	0x18c	; 0x18c <_Z14TWI_write_bytehhh>
		
		TWI_write_byte(oled_add, 0x00, SSD1306_CHARGEPUMP);
     df8:	4d e8       	ldi	r20, 0x8D	; 141
     dfa:	60 e0       	ldi	r22, 0x00	; 0
     dfc:	8c e3       	ldi	r24, 0x3C	; 60
     dfe:	0e 94 c6 00 	call	0x18c	; 0x18c <_Z14TWI_write_bytehhh>
		TWI_write_byte(oled_add, 0x00, 0x14);
     e02:	44 e1       	ldi	r20, 0x14	; 20
     e04:	60 e0       	ldi	r22, 0x00	; 0
     e06:	8c e3       	ldi	r24, 0x3C	; 60
     e08:	0e 94 c6 00 	call	0x18c	; 0x18c <_Z14TWI_write_bytehhh>
		
		TWI_write_byte(oled_add, 0x00, SSD1306_MEMORYMODE);
     e0c:	40 e2       	ldi	r20, 0x20	; 32
     e0e:	60 e0       	ldi	r22, 0x00	; 0
     e10:	8c e3       	ldi	r24, 0x3C	; 60
     e12:	0e 94 c6 00 	call	0x18c	; 0x18c <_Z14TWI_write_bytehhh>
		TWI_write_byte(oled_add, 0x00, 0x00);
     e16:	40 e0       	ldi	r20, 0x00	; 0
     e18:	60 e0       	ldi	r22, 0x00	; 0
     e1a:	8c e3       	ldi	r24, 0x3C	; 60
     e1c:	0e 94 c6 00 	call	0x18c	; 0x18c <_Z14TWI_write_bytehhh>
		
		TWI_write_byte(oled_add, 0x00, SSD1306_SEGREMAP | 0x1);
     e20:	41 ea       	ldi	r20, 0xA1	; 161
     e22:	60 e0       	ldi	r22, 0x00	; 0
     e24:	8c e3       	ldi	r24, 0x3C	; 60
     e26:	0e 94 c6 00 	call	0x18c	; 0x18c <_Z14TWI_write_bytehhh>
		
		TWI_write_byte(oled_add, 0x00, SSD1306_COMSCANDEC);
     e2a:	48 ec       	ldi	r20, 0xC8	; 200
     e2c:	60 e0       	ldi	r22, 0x00	; 0
     e2e:	8c e3       	ldi	r24, 0x3C	; 60
     e30:	0e 94 c6 00 	call	0x18c	; 0x18c <_Z14TWI_write_bytehhh>
		
		TWI_write_byte(oled_add, 0x00, SSD1306_SETCOMPINS);
     e34:	4a ed       	ldi	r20, 0xDA	; 218
     e36:	60 e0       	ldi	r22, 0x00	; 0
     e38:	8c e3       	ldi	r24, 0x3C	; 60
     e3a:	0e 94 c6 00 	call	0x18c	; 0x18c <_Z14TWI_write_bytehhh>
		TWI_write_byte(oled_add, 0x00, 0x12);
     e3e:	42 e1       	ldi	r20, 0x12	; 18
     e40:	60 e0       	ldi	r22, 0x00	; 0
     e42:	8c e3       	ldi	r24, 0x3C	; 60
     e44:	0e 94 c6 00 	call	0x18c	; 0x18c <_Z14TWI_write_bytehhh>
		
		TWI_write_byte(oled_add, 0x00, SSD1306_SETCONTRAST);
     e48:	41 e8       	ldi	r20, 0x81	; 129
     e4a:	60 e0       	ldi	r22, 0x00	; 0
     e4c:	8c e3       	ldi	r24, 0x3C	; 60
     e4e:	0e 94 c6 00 	call	0x18c	; 0x18c <_Z14TWI_write_bytehhh>
		TWI_write_byte(oled_add, 0x00, 0xCF); // contrast
     e52:	4f ec       	ldi	r20, 0xCF	; 207
     e54:	60 e0       	ldi	r22, 0x00	; 0
     e56:	8c e3       	ldi	r24, 0x3C	; 60
     e58:	0e 94 c6 00 	call	0x18c	; 0x18c <_Z14TWI_write_bytehhh>
		
		TWI_write_byte(oled_add, 0x00, SSD1306_SETPRECHARGE);
     e5c:	49 ed       	ldi	r20, 0xD9	; 217
     e5e:	60 e0       	ldi	r22, 0x00	; 0
     e60:	8c e3       	ldi	r24, 0x3C	; 60
     e62:	0e 94 c6 00 	call	0x18c	; 0x18c <_Z14TWI_write_bytehhh>
		TWI_write_byte(oled_add, 0x00, 0xF1);
     e66:	41 ef       	ldi	r20, 0xF1	; 241
     e68:	60 e0       	ldi	r22, 0x00	; 0
     e6a:	8c e3       	ldi	r24, 0x3C	; 60
     e6c:	0e 94 c6 00 	call	0x18c	; 0x18c <_Z14TWI_write_bytehhh>
		
		TWI_write_byte(oled_add, 0x00, SSD1306_SETVCOMDETECT);
     e70:	4b ed       	ldi	r20, 0xDB	; 219
     e72:	60 e0       	ldi	r22, 0x00	; 0
     e74:	8c e3       	ldi	r24, 0x3C	; 60
     e76:	0e 94 c6 00 	call	0x18c	; 0x18c <_Z14TWI_write_bytehhh>
		TWI_write_byte(oled_add, 0x00, 0x40);
     e7a:	40 e4       	ldi	r20, 0x40	; 64
     e7c:	60 e0       	ldi	r22, 0x00	; 0
     e7e:	8c e3       	ldi	r24, 0x3C	; 60
     e80:	0e 94 c6 00 	call	0x18c	; 0x18c <_Z14TWI_write_bytehhh>
		
		TWI_write_byte(oled_add, 0x00, SSD1306_DISPLAYALLON_RESUME);
     e84:	44 ea       	ldi	r20, 0xA4	; 164
     e86:	60 e0       	ldi	r22, 0x00	; 0
     e88:	8c e3       	ldi	r24, 0x3C	; 60
     e8a:	0e 94 c6 00 	call	0x18c	; 0x18c <_Z14TWI_write_bytehhh>
		
		TWI_write_byte(oled_add, 0x00, SSD1306_NORMALDISPLAY);
     e8e:	46 ea       	ldi	r20, 0xA6	; 166
     e90:	60 e0       	ldi	r22, 0x00	; 0
     e92:	8c e3       	ldi	r24, 0x3C	; 60
     e94:	0e 94 c6 00 	call	0x18c	; 0x18c <_Z14TWI_write_bytehhh>
		
		TWI_write_byte(oled_add, 0x00, SSD1306_DISPLAYON);
     e98:	4f ea       	ldi	r20, 0xAF	; 175
     e9a:	60 e0       	ldi	r22, 0x00	; 0
     e9c:	8c e3       	ldi	r24, 0x3C	; 60
     e9e:	0e 94 c6 00 	call	0x18c	; 0x18c <_Z14TWI_write_bytehhh>
     ea2:	08 95       	ret

00000ea4 <_Z15oled_print_logov>:
		}
		i2c.stop();
	}
	*/
	
	TWI_write_byte(oled_add, 0x00, SSD1306_COLUMNADDR);
     ea4:	41 e2       	ldi	r20, 0x21	; 33
     ea6:	60 e0       	ldi	r22, 0x00	; 0
     ea8:	8c e3       	ldi	r24, 0x3C	; 60
     eaa:	0e 94 c6 00 	call	0x18c	; 0x18c <_Z14TWI_write_bytehhh>
	TWI_write_byte(oled_add, 0x00, 0x00);
     eae:	40 e0       	ldi	r20, 0x00	; 0
     eb0:	60 e0       	ldi	r22, 0x00	; 0
     eb2:	8c e3       	ldi	r24, 0x3C	; 60
     eb4:	0e 94 c6 00 	call	0x18c	; 0x18c <_Z14TWI_write_bytehhh>
	TWI_write_byte(oled_add, 0x00, 0x7F);
     eb8:	4f e7       	ldi	r20, 0x7F	; 127
     eba:	60 e0       	ldi	r22, 0x00	; 0
     ebc:	8c e3       	ldi	r24, 0x3C	; 60
     ebe:	0e 94 c6 00 	call	0x18c	; 0x18c <_Z14TWI_write_bytehhh>
	
	TWI_write_byte(oled_add, 0x00, SSD1306_PAGEADDR);
     ec2:	42 e2       	ldi	r20, 0x22	; 34
     ec4:	60 e0       	ldi	r22, 0x00	; 0
     ec6:	8c e3       	ldi	r24, 0x3C	; 60
     ec8:	0e 94 c6 00 	call	0x18c	; 0x18c <_Z14TWI_write_bytehhh>
	TWI_write_byte(oled_add, 0x00, 0x00);
     ecc:	40 e0       	ldi	r20, 0x00	; 0
     ece:	60 e0       	ldi	r22, 0x00	; 0
     ed0:	8c e3       	ldi	r24, 0x3C	; 60
     ed2:	0e 94 c6 00 	call	0x18c	; 0x18c <_Z14TWI_write_bytehhh>
	TWI_write_byte(oled_add, 0x00, 0x07);
     ed6:	47 e0       	ldi	r20, 0x07	; 7
     ed8:	60 e0       	ldi	r22, 0x00	; 0
     eda:	8c e3       	ldi	r24, 0x3C	; 60
     edc:	0e 94 c6 00 	call	0x18c	; 0x18c <_Z14TWI_write_bytehhh>
	
	TWI_write_byte(oled_add, 0x40, 0x55);
     ee0:	45 e5       	ldi	r20, 0x55	; 85
     ee2:	60 e4       	ldi	r22, 0x40	; 64
     ee4:	8c e3       	ldi	r24, 0x3C	; 60
     ee6:	0e 94 c6 00 	call	0x18c	; 0x18c <_Z14TWI_write_bytehhh>
     eea:	08 95       	ret

00000eec <_Z16task_button_hookv>:
	  
int int_test = -9999;

void task_button_hook()
{
	if ( (PINC&read_K1) == 0)
     eec:	31 99       	sbic	0x06, 1	; 6
     eee:	06 c0       	rjmp	.+12     	; 0xefc <_Z16task_button_hookv+0x10>
	{
		byte_button_1++;
     ef0:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <byte_button_1>
     ef4:	8f 5f       	subi	r24, 0xFF	; 255
     ef6:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <byte_button_1>
     efa:	02 c0       	rjmp	.+4      	; 0xf00 <_Z16task_button_hookv+0x14>
	}
	else
	{
		byte_button_1 = 0;
     efc:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <byte_button_1>
	}
	
	if ( (PINC&read_K2) == 0)
     f00:	32 99       	sbic	0x06, 2	; 6
     f02:	0a c0       	rjmp	.+20     	; 0xf18 <_Z16task_button_hookv+0x2c>
	{
		byte_button_2++;
     f04:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <byte_button_2>
     f08:	8f 5f       	subi	r24, 0xFF	; 255
     f0a:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <byte_button_2>
	else
	{
		byte_button_2 = 0;
	}
	
	if (byte_button_1 > button_time_const)
     f0e:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <byte_button_1>
     f12:	83 30       	cpi	r24, 0x03	; 3
     f14:	38 f4       	brcc	.+14     	; 0xf24 <_Z16task_button_hookv+0x38>
     f16:	11 c0       	rjmp	.+34     	; 0xf3a <_Z16task_button_hookv+0x4e>
	{
		byte_button_2++;
	}
	else
	{
		byte_button_2 = 0;
     f18:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <byte_button_2>
	}
	
	if (byte_button_1 > button_time_const)
     f1c:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <byte_button_1>
     f20:	83 30       	cpi	r24, 0x03	; 3
     f22:	d0 f0       	brcs	.+52     	; 0xf58 <_Z16task_button_hookv+0x6c>
	{
		int_test++;
     f24:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     f28:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
     f2c:	01 96       	adiw	r24, 0x01	; 1
     f2e:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
     f32:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
		byte_button_1 = 0;
     f36:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <byte_button_1>
	}
	
	if (byte_button_2 > button_time_const)
     f3a:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <byte_button_2>
     f3e:	83 30       	cpi	r24, 0x03	; 3
     f40:	58 f0       	brcs	.+22     	; 0xf58 <_Z16task_button_hookv+0x6c>
	{
		int_test--;
     f42:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     f46:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
     f4a:	01 97       	sbiw	r24, 0x01	; 1
     f4c:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
     f50:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
		byte_button_2 = 0;
     f54:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <byte_button_2>
     f58:	08 95       	ret

00000f5a <_Z16task_lcd_refreshv>:
	}
}

void task_lcd_refresh()
{
	displayed( int_test );
     f5a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     f5e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
     f62:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <_Z9displayedi>
     f66:	08 95       	ret

00000f68 <_Z17task_i2c_pressurev>:
	UART_write_short( long_bmp180_AC4 );
	UART_write_short( long_bmp180_AC5 );
	UART_write_short( long_bmp180_AC6 );
	*/
	
	bmp180_get_ut();
     f68:	0e 94 61 04 	call	0x8c2	; 0x8c2 <_Z13bmp180_get_utv>
	
	bmp180_get_temperature();
     f6c:	0e 94 8d 04 	call	0x91a	; 0x91a <_Z22bmp180_get_temperaturev>
	
	bmp180_get_up();
     f70:	0e 94 1c 05 	call	0xa38	; 0xa38 <_Z13bmp180_get_upv>
	
	bmp180_get_pressure();
     f74:	0e 94 57 05 	call	0xaae	; 0xaae <_Z19bmp180_get_pressurev>
	
	//int_test = bmp180_temp;
	int_test = bmp180_press;
     f78:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <bmp180_press>
     f7c:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <bmp180_press+0x1>
     f80:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
     f84:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     f88:	08 95       	ret

00000f8a <_Z5setupv>:
	//UART_write_byte( 77 );
}

void setup()
{
	pwr_switch_off;
     f8a:	43 98       	cbi	0x08, 3	; 8
	init_pwr_switch;
     f8c:	3b 9a       	sbi	0x07, 3	; 7
	delay_counters(8*test_delay);
     f8e:	60 e0       	ldi	r22, 0x00	; 0
     f90:	7a e6       	ldi	r23, 0x6A	; 106
     f92:	88 e1       	ldi	r24, 0x18	; 24
     f94:	90 e0       	ldi	r25, 0x00	; 0
     f96:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <_Z14delay_countersm>
	pwr_switch_on;
     f9a:	43 9a       	sbi	0x08, 3	; 8
	
	lcd_init();
     f9c:	0e 94 35 01 	call	0x26a	; 0x26a <_Z8lcd_initv>
	
	init_oled();
     fa0:	0e 94 d4 06 	call	0xda8	; 0xda8 <_Z9init_oledv>
	
	oled_print_logo();
     fa4:	0e 94 52 07 	call	0xea4	; 0xea4 <_Z15oled_print_logov>
	
	test_segment();
     fa8:	0e 94 6e 01 	call	0x2dc	; 0x2dc <_Z12test_segmentv>
	
	
	UART_open(8000000, 9600);
     fac:	20 e8       	ldi	r18, 0x80	; 128
     fae:	35 e2       	ldi	r19, 0x25	; 37
     fb0:	40 e0       	ldi	r20, 0x00	; 0
     fb2:	50 e0       	ldi	r21, 0x00	; 0
     fb4:	60 e0       	ldi	r22, 0x00	; 0
     fb6:	72 e1       	ldi	r23, 0x12	; 18
     fb8:	8a e7       	ldi	r24, 0x7A	; 122
     fba:	90 e0       	ldi	r25, 0x00	; 0
     fbc:	0e 94 5e 00 	call	0xbc	; 0xbc <_Z9UART_openmm>
 * Author : mini
 */ 
//#include <util/twi.h>

void TWI_init_speed(uint8_t prescal)	{
	TWBR = prescal;
     fc0:	82 e1       	ldi	r24, 0x12	; 18
     fc2:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__DATA_REGION_ORIGIN__+0x58>
	
	TWI_init_speed(18);
	
	bmp180_get_cal_param();
     fc6:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <_Z20bmp180_get_cal_paramv>
	
	init_timer_counter();
     fca:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <_Z18init_timer_counterv>
	sei();
     fce:	78 94       	sei
     fd0:	08 95       	ret

00000fd2 <_Z4loopv>:
	/*
	UART_write_byte(33);
	
	delay_counters(5000);
	*/
	if ( counter_task_lcd_refresh >= 200 )
     fd2:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <counter_task_lcd_refresh>
     fd6:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <counter_task_lcd_refresh+0x1>
     fda:	88 3c       	cpi	r24, 0xC8	; 200
     fdc:	91 05       	cpc	r25, r1
     fde:	30 f0       	brcs	.+12     	; 0xfec <_Z4loopv+0x1a>
	{
		counter_task_lcd_refresh = 0;
     fe0:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <counter_task_lcd_refresh+0x1>
     fe4:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <counter_task_lcd_refresh>
		task_lcd_refresh();
     fe8:	0e 94 ad 07 	call	0xf5a	; 0xf5a <_Z16task_lcd_refreshv>
	}
	
	if ( counter_task_button_hook >= 50 )
     fec:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <counter_task_button_hook>
     ff0:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <counter_task_button_hook+0x1>
     ff4:	c2 97       	sbiw	r24, 0x32	; 50
     ff6:	30 f0       	brcs	.+12     	; 0x1004 <_Z4loopv+0x32>
	{
		counter_task_button_hook = 0;
     ff8:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <counter_task_button_hook+0x1>
     ffc:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <counter_task_button_hook>
		task_button_hook();
    1000:	0e 94 76 07 	call	0xeec	; 0xeec <_Z16task_button_hookv>
	}
	
	if ( counter_task_i2c_pressure >= 1000 )
    1004:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__data_end>
    1008:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <__data_end+0x1>
    100c:	88 3e       	cpi	r24, 0xE8	; 232
    100e:	93 40       	sbci	r25, 0x03	; 3
    1010:	30 f0       	brcs	.+12     	; 0x101e <_Z4loopv+0x4c>
	{
		counter_task_i2c_pressure = 0;
    1012:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <__data_end+0x1>
    1016:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <__data_end>
		task_i2c_pressure();
    101a:	0e 94 b4 07 	call	0xf68	; 0xf68 <_Z17task_i2c_pressurev>
    101e:	08 95       	ret

00001020 <main>:
	//delay_counters(1000);
}

int main (void)
{
	setup();
    1020:	0e 94 c5 07 	call	0xf8a	; 0xf8a <_Z5setupv>
	while(1)
	{
		loop();
    1024:	0e 94 e9 07 	call	0xfd2	; 0xfd2 <_Z4loopv>
    1028:	fd cf       	rjmp	.-6      	; 0x1024 <main+0x4>

0000102a <__vector_11>:
	}
}

ISR (TIMER1_COMPA_vect)
{
    102a:	1f 92       	push	r1
    102c:	0f 92       	push	r0
    102e:	0f b6       	in	r0, 0x3f	; 63
    1030:	0f 92       	push	r0
    1032:	11 24       	eor	r1, r1
    1034:	8f 93       	push	r24
    1036:	9f 93       	push	r25
	counter_task_lcd_refresh++;
    1038:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <counter_task_lcd_refresh>
    103c:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <counter_task_lcd_refresh+0x1>
    1040:	01 96       	adiw	r24, 0x01	; 1
    1042:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <counter_task_lcd_refresh+0x1>
    1046:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <counter_task_lcd_refresh>
	counter_task_button_hook++;
    104a:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <counter_task_button_hook>
    104e:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <counter_task_button_hook+0x1>
    1052:	01 96       	adiw	r24, 0x01	; 1
    1054:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <counter_task_button_hook+0x1>
    1058:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <counter_task_button_hook>
	counter_task_i2c_pressure++;
    105c:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__data_end>
    1060:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <__data_end+0x1>
    1064:	01 96       	adiw	r24, 0x01	; 1
    1066:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__data_end+0x1>
    106a:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_end>
	TCNT1 = 0;
    106e:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1072:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
}
    1076:	9f 91       	pop	r25
    1078:	8f 91       	pop	r24
    107a:	0f 90       	pop	r0
    107c:	0f be       	out	0x3f, r0	; 63
    107e:	0f 90       	pop	r0
    1080:	1f 90       	pop	r1
    1082:	18 95       	reti

00001084 <__fixunssfsi>:
    1084:	0e 94 b6 08 	call	0x116c	; 0x116c <__fp_splitA>
    1088:	88 f0       	brcs	.+34     	; 0x10ac <__fixunssfsi+0x28>
    108a:	9f 57       	subi	r25, 0x7F	; 127
    108c:	98 f0       	brcs	.+38     	; 0x10b4 <__fixunssfsi+0x30>
    108e:	b9 2f       	mov	r27, r25
    1090:	99 27       	eor	r25, r25
    1092:	b7 51       	subi	r27, 0x17	; 23
    1094:	b0 f0       	brcs	.+44     	; 0x10c2 <__fixunssfsi+0x3e>
    1096:	e1 f0       	breq	.+56     	; 0x10d0 <__fixunssfsi+0x4c>
    1098:	66 0f       	add	r22, r22
    109a:	77 1f       	adc	r23, r23
    109c:	88 1f       	adc	r24, r24
    109e:	99 1f       	adc	r25, r25
    10a0:	1a f0       	brmi	.+6      	; 0x10a8 <__fixunssfsi+0x24>
    10a2:	ba 95       	dec	r27
    10a4:	c9 f7       	brne	.-14     	; 0x1098 <__fixunssfsi+0x14>
    10a6:	14 c0       	rjmp	.+40     	; 0x10d0 <__fixunssfsi+0x4c>
    10a8:	b1 30       	cpi	r27, 0x01	; 1
    10aa:	91 f0       	breq	.+36     	; 0x10d0 <__fixunssfsi+0x4c>
    10ac:	0e 94 d0 08 	call	0x11a0	; 0x11a0 <__fp_zero>
    10b0:	b1 e0       	ldi	r27, 0x01	; 1
    10b2:	08 95       	ret
    10b4:	0c 94 d0 08 	jmp	0x11a0	; 0x11a0 <__fp_zero>
    10b8:	67 2f       	mov	r22, r23
    10ba:	78 2f       	mov	r23, r24
    10bc:	88 27       	eor	r24, r24
    10be:	b8 5f       	subi	r27, 0xF8	; 248
    10c0:	39 f0       	breq	.+14     	; 0x10d0 <__fixunssfsi+0x4c>
    10c2:	b9 3f       	cpi	r27, 0xF9	; 249
    10c4:	cc f3       	brlt	.-14     	; 0x10b8 <__fixunssfsi+0x34>
    10c6:	86 95       	lsr	r24
    10c8:	77 95       	ror	r23
    10ca:	67 95       	ror	r22
    10cc:	b3 95       	inc	r27
    10ce:	d9 f7       	brne	.-10     	; 0x10c6 <__fixunssfsi+0x42>
    10d0:	3e f4       	brtc	.+14     	; 0x10e0 <__fixunssfsi+0x5c>
    10d2:	90 95       	com	r25
    10d4:	80 95       	com	r24
    10d6:	70 95       	com	r23
    10d8:	61 95       	neg	r22
    10da:	7f 4f       	sbci	r23, 0xFF	; 255
    10dc:	8f 4f       	sbci	r24, 0xFF	; 255
    10de:	9f 4f       	sbci	r25, 0xFF	; 255
    10e0:	08 95       	ret

000010e2 <__floatunsisf>:
    10e2:	e8 94       	clt
    10e4:	09 c0       	rjmp	.+18     	; 0x10f8 <__floatsisf+0x12>

000010e6 <__floatsisf>:
    10e6:	97 fb       	bst	r25, 7
    10e8:	3e f4       	brtc	.+14     	; 0x10f8 <__floatsisf+0x12>
    10ea:	90 95       	com	r25
    10ec:	80 95       	com	r24
    10ee:	70 95       	com	r23
    10f0:	61 95       	neg	r22
    10f2:	7f 4f       	sbci	r23, 0xFF	; 255
    10f4:	8f 4f       	sbci	r24, 0xFF	; 255
    10f6:	9f 4f       	sbci	r25, 0xFF	; 255
    10f8:	99 23       	and	r25, r25
    10fa:	a9 f0       	breq	.+42     	; 0x1126 <__floatsisf+0x40>
    10fc:	f9 2f       	mov	r31, r25
    10fe:	96 e9       	ldi	r25, 0x96	; 150
    1100:	bb 27       	eor	r27, r27
    1102:	93 95       	inc	r25
    1104:	f6 95       	lsr	r31
    1106:	87 95       	ror	r24
    1108:	77 95       	ror	r23
    110a:	67 95       	ror	r22
    110c:	b7 95       	ror	r27
    110e:	f1 11       	cpse	r31, r1
    1110:	f8 cf       	rjmp	.-16     	; 0x1102 <__floatsisf+0x1c>
    1112:	fa f4       	brpl	.+62     	; 0x1152 <__floatsisf+0x6c>
    1114:	bb 0f       	add	r27, r27
    1116:	11 f4       	brne	.+4      	; 0x111c <__floatsisf+0x36>
    1118:	60 ff       	sbrs	r22, 0
    111a:	1b c0       	rjmp	.+54     	; 0x1152 <__floatsisf+0x6c>
    111c:	6f 5f       	subi	r22, 0xFF	; 255
    111e:	7f 4f       	sbci	r23, 0xFF	; 255
    1120:	8f 4f       	sbci	r24, 0xFF	; 255
    1122:	9f 4f       	sbci	r25, 0xFF	; 255
    1124:	16 c0       	rjmp	.+44     	; 0x1152 <__floatsisf+0x6c>
    1126:	88 23       	and	r24, r24
    1128:	11 f0       	breq	.+4      	; 0x112e <__floatsisf+0x48>
    112a:	96 e9       	ldi	r25, 0x96	; 150
    112c:	11 c0       	rjmp	.+34     	; 0x1150 <__floatsisf+0x6a>
    112e:	77 23       	and	r23, r23
    1130:	21 f0       	breq	.+8      	; 0x113a <__floatsisf+0x54>
    1132:	9e e8       	ldi	r25, 0x8E	; 142
    1134:	87 2f       	mov	r24, r23
    1136:	76 2f       	mov	r23, r22
    1138:	05 c0       	rjmp	.+10     	; 0x1144 <__floatsisf+0x5e>
    113a:	66 23       	and	r22, r22
    113c:	71 f0       	breq	.+28     	; 0x115a <__floatsisf+0x74>
    113e:	96 e8       	ldi	r25, 0x86	; 134
    1140:	86 2f       	mov	r24, r22
    1142:	70 e0       	ldi	r23, 0x00	; 0
    1144:	60 e0       	ldi	r22, 0x00	; 0
    1146:	2a f0       	brmi	.+10     	; 0x1152 <__floatsisf+0x6c>
    1148:	9a 95       	dec	r25
    114a:	66 0f       	add	r22, r22
    114c:	77 1f       	adc	r23, r23
    114e:	88 1f       	adc	r24, r24
    1150:	da f7       	brpl	.-10     	; 0x1148 <__floatsisf+0x62>
    1152:	88 0f       	add	r24, r24
    1154:	96 95       	lsr	r25
    1156:	87 95       	ror	r24
    1158:	97 f9       	bld	r25, 7
    115a:	08 95       	ret

0000115c <__fp_split3>:
    115c:	57 fd       	sbrc	r21, 7
    115e:	90 58       	subi	r25, 0x80	; 128
    1160:	44 0f       	add	r20, r20
    1162:	55 1f       	adc	r21, r21
    1164:	59 f0       	breq	.+22     	; 0x117c <__fp_splitA+0x10>
    1166:	5f 3f       	cpi	r21, 0xFF	; 255
    1168:	71 f0       	breq	.+28     	; 0x1186 <__fp_splitA+0x1a>
    116a:	47 95       	ror	r20

0000116c <__fp_splitA>:
    116c:	88 0f       	add	r24, r24
    116e:	97 fb       	bst	r25, 7
    1170:	99 1f       	adc	r25, r25
    1172:	61 f0       	breq	.+24     	; 0x118c <__fp_splitA+0x20>
    1174:	9f 3f       	cpi	r25, 0xFF	; 255
    1176:	79 f0       	breq	.+30     	; 0x1196 <__fp_splitA+0x2a>
    1178:	87 95       	ror	r24
    117a:	08 95       	ret
    117c:	12 16       	cp	r1, r18
    117e:	13 06       	cpc	r1, r19
    1180:	14 06       	cpc	r1, r20
    1182:	55 1f       	adc	r21, r21
    1184:	f2 cf       	rjmp	.-28     	; 0x116a <__fp_split3+0xe>
    1186:	46 95       	lsr	r20
    1188:	f1 df       	rcall	.-30     	; 0x116c <__fp_splitA>
    118a:	08 c0       	rjmp	.+16     	; 0x119c <__fp_splitA+0x30>
    118c:	16 16       	cp	r1, r22
    118e:	17 06       	cpc	r1, r23
    1190:	18 06       	cpc	r1, r24
    1192:	99 1f       	adc	r25, r25
    1194:	f1 cf       	rjmp	.-30     	; 0x1178 <__fp_splitA+0xc>
    1196:	86 95       	lsr	r24
    1198:	71 05       	cpc	r23, r1
    119a:	61 05       	cpc	r22, r1
    119c:	08 94       	sec
    119e:	08 95       	ret

000011a0 <__fp_zero>:
    11a0:	e8 94       	clt

000011a2 <__fp_szero>:
    11a2:	bb 27       	eor	r27, r27
    11a4:	66 27       	eor	r22, r22
    11a6:	77 27       	eor	r23, r23
    11a8:	cb 01       	movw	r24, r22
    11aa:	97 f9       	bld	r25, 7
    11ac:	08 95       	ret

000011ae <round>:
    11ae:	0e 94 b6 08 	call	0x116c	; 0x116c <__fp_splitA>
    11b2:	e8 f0       	brcs	.+58     	; 0x11ee <round+0x40>
    11b4:	9e 37       	cpi	r25, 0x7E	; 126
    11b6:	e8 f0       	brcs	.+58     	; 0x11f2 <round+0x44>
    11b8:	96 39       	cpi	r25, 0x96	; 150
    11ba:	b8 f4       	brcc	.+46     	; 0x11ea <round+0x3c>
    11bc:	9e 38       	cpi	r25, 0x8E	; 142
    11be:	48 f4       	brcc	.+18     	; 0x11d2 <round+0x24>
    11c0:	67 2f       	mov	r22, r23
    11c2:	78 2f       	mov	r23, r24
    11c4:	88 27       	eor	r24, r24
    11c6:	98 5f       	subi	r25, 0xF8	; 248
    11c8:	f9 cf       	rjmp	.-14     	; 0x11bc <round+0xe>
    11ca:	86 95       	lsr	r24
    11cc:	77 95       	ror	r23
    11ce:	67 95       	ror	r22
    11d0:	93 95       	inc	r25
    11d2:	95 39       	cpi	r25, 0x95	; 149
    11d4:	d0 f3       	brcs	.-12     	; 0x11ca <round+0x1c>
    11d6:	b6 2f       	mov	r27, r22
    11d8:	b1 70       	andi	r27, 0x01	; 1
    11da:	6b 0f       	add	r22, r27
    11dc:	71 1d       	adc	r23, r1
    11de:	81 1d       	adc	r24, r1
    11e0:	20 f4       	brcc	.+8      	; 0x11ea <round+0x3c>
    11e2:	87 95       	ror	r24
    11e4:	77 95       	ror	r23
    11e6:	67 95       	ror	r22
    11e8:	93 95       	inc	r25
    11ea:	0c 94 fb 08 	jmp	0x11f6	; 0x11f6 <__fp_mintl>
    11ee:	0c 94 16 09 	jmp	0x122c	; 0x122c <__fp_mpack>
    11f2:	0c 94 d1 08 	jmp	0x11a2	; 0x11a2 <__fp_szero>

000011f6 <__fp_mintl>:
    11f6:	88 23       	and	r24, r24
    11f8:	71 f4       	brne	.+28     	; 0x1216 <__fp_mintl+0x20>
    11fa:	77 23       	and	r23, r23
    11fc:	21 f0       	breq	.+8      	; 0x1206 <__fp_mintl+0x10>
    11fe:	98 50       	subi	r25, 0x08	; 8
    1200:	87 2b       	or	r24, r23
    1202:	76 2f       	mov	r23, r22
    1204:	07 c0       	rjmp	.+14     	; 0x1214 <__fp_mintl+0x1e>
    1206:	66 23       	and	r22, r22
    1208:	11 f4       	brne	.+4      	; 0x120e <__fp_mintl+0x18>
    120a:	99 27       	eor	r25, r25
    120c:	0d c0       	rjmp	.+26     	; 0x1228 <__fp_mintl+0x32>
    120e:	90 51       	subi	r25, 0x10	; 16
    1210:	86 2b       	or	r24, r22
    1212:	70 e0       	ldi	r23, 0x00	; 0
    1214:	60 e0       	ldi	r22, 0x00	; 0
    1216:	2a f0       	brmi	.+10     	; 0x1222 <__fp_mintl+0x2c>
    1218:	9a 95       	dec	r25
    121a:	66 0f       	add	r22, r22
    121c:	77 1f       	adc	r23, r23
    121e:	88 1f       	adc	r24, r24
    1220:	da f7       	brpl	.-10     	; 0x1218 <__fp_mintl+0x22>
    1222:	88 0f       	add	r24, r24
    1224:	96 95       	lsr	r25
    1226:	87 95       	ror	r24
    1228:	97 f9       	bld	r25, 7
    122a:	08 95       	ret

0000122c <__fp_mpack>:
    122c:	9f 3f       	cpi	r25, 0xFF	; 255
    122e:	31 f0       	breq	.+12     	; 0x123c <__fp_mpack_finite+0xc>

00001230 <__fp_mpack_finite>:
    1230:	91 50       	subi	r25, 0x01	; 1
    1232:	20 f4       	brcc	.+8      	; 0x123c <__fp_mpack_finite+0xc>
    1234:	87 95       	ror	r24
    1236:	77 95       	ror	r23
    1238:	67 95       	ror	r22
    123a:	b7 95       	ror	r27
    123c:	88 0f       	add	r24, r24
    123e:	91 1d       	adc	r25, r1
    1240:	96 95       	lsr	r25
    1242:	87 95       	ror	r24
    1244:	97 f9       	bld	r25, 7
    1246:	08 95       	ret

00001248 <__mulsi3>:
    1248:	db 01       	movw	r26, r22
    124a:	8f 93       	push	r24
    124c:	9f 93       	push	r25
    124e:	0e 94 8f 09 	call	0x131e	; 0x131e <__muluhisi3>
    1252:	bf 91       	pop	r27
    1254:	af 91       	pop	r26
    1256:	a2 9f       	mul	r26, r18
    1258:	80 0d       	add	r24, r0
    125a:	91 1d       	adc	r25, r1
    125c:	a3 9f       	mul	r26, r19
    125e:	90 0d       	add	r25, r0
    1260:	b2 9f       	mul	r27, r18
    1262:	90 0d       	add	r25, r0
    1264:	11 24       	eor	r1, r1
    1266:	08 95       	ret

00001268 <__divmodhi4>:
    1268:	97 fb       	bst	r25, 7
    126a:	07 2e       	mov	r0, r23
    126c:	16 f4       	brtc	.+4      	; 0x1272 <__divmodhi4+0xa>
    126e:	00 94       	com	r0
    1270:	07 d0       	rcall	.+14     	; 0x1280 <__divmodhi4_neg1>
    1272:	77 fd       	sbrc	r23, 7
    1274:	09 d0       	rcall	.+18     	; 0x1288 <__divmodhi4_neg2>
    1276:	0e 94 a2 09 	call	0x1344	; 0x1344 <__udivmodhi4>
    127a:	07 fc       	sbrc	r0, 7
    127c:	05 d0       	rcall	.+10     	; 0x1288 <__divmodhi4_neg2>
    127e:	3e f4       	brtc	.+14     	; 0x128e <__divmodhi4_exit>

00001280 <__divmodhi4_neg1>:
    1280:	90 95       	com	r25
    1282:	81 95       	neg	r24
    1284:	9f 4f       	sbci	r25, 0xFF	; 255
    1286:	08 95       	ret

00001288 <__divmodhi4_neg2>:
    1288:	70 95       	com	r23
    128a:	61 95       	neg	r22
    128c:	7f 4f       	sbci	r23, 0xFF	; 255

0000128e <__divmodhi4_exit>:
    128e:	08 95       	ret

00001290 <__udivmodsi4>:
    1290:	a1 e2       	ldi	r26, 0x21	; 33
    1292:	1a 2e       	mov	r1, r26
    1294:	aa 1b       	sub	r26, r26
    1296:	bb 1b       	sub	r27, r27
    1298:	fd 01       	movw	r30, r26
    129a:	0d c0       	rjmp	.+26     	; 0x12b6 <__udivmodsi4_ep>

0000129c <__udivmodsi4_loop>:
    129c:	aa 1f       	adc	r26, r26
    129e:	bb 1f       	adc	r27, r27
    12a0:	ee 1f       	adc	r30, r30
    12a2:	ff 1f       	adc	r31, r31
    12a4:	a2 17       	cp	r26, r18
    12a6:	b3 07       	cpc	r27, r19
    12a8:	e4 07       	cpc	r30, r20
    12aa:	f5 07       	cpc	r31, r21
    12ac:	20 f0       	brcs	.+8      	; 0x12b6 <__udivmodsi4_ep>
    12ae:	a2 1b       	sub	r26, r18
    12b0:	b3 0b       	sbc	r27, r19
    12b2:	e4 0b       	sbc	r30, r20
    12b4:	f5 0b       	sbc	r31, r21

000012b6 <__udivmodsi4_ep>:
    12b6:	66 1f       	adc	r22, r22
    12b8:	77 1f       	adc	r23, r23
    12ba:	88 1f       	adc	r24, r24
    12bc:	99 1f       	adc	r25, r25
    12be:	1a 94       	dec	r1
    12c0:	69 f7       	brne	.-38     	; 0x129c <__udivmodsi4_loop>
    12c2:	60 95       	com	r22
    12c4:	70 95       	com	r23
    12c6:	80 95       	com	r24
    12c8:	90 95       	com	r25
    12ca:	9b 01       	movw	r18, r22
    12cc:	ac 01       	movw	r20, r24
    12ce:	bd 01       	movw	r22, r26
    12d0:	cf 01       	movw	r24, r30
    12d2:	08 95       	ret

000012d4 <__divmodsi4>:
    12d4:	05 2e       	mov	r0, r21
    12d6:	97 fb       	bst	r25, 7
    12d8:	1e f4       	brtc	.+6      	; 0x12e0 <__divmodsi4+0xc>
    12da:	00 94       	com	r0
    12dc:	0e 94 81 09 	call	0x1302	; 0x1302 <__negsi2>
    12e0:	57 fd       	sbrc	r21, 7
    12e2:	07 d0       	rcall	.+14     	; 0x12f2 <__divmodsi4_neg2>
    12e4:	0e 94 48 09 	call	0x1290	; 0x1290 <__udivmodsi4>
    12e8:	07 fc       	sbrc	r0, 7
    12ea:	03 d0       	rcall	.+6      	; 0x12f2 <__divmodsi4_neg2>
    12ec:	4e f4       	brtc	.+18     	; 0x1300 <__divmodsi4_exit>
    12ee:	0c 94 81 09 	jmp	0x1302	; 0x1302 <__negsi2>

000012f2 <__divmodsi4_neg2>:
    12f2:	50 95       	com	r21
    12f4:	40 95       	com	r20
    12f6:	30 95       	com	r19
    12f8:	21 95       	neg	r18
    12fa:	3f 4f       	sbci	r19, 0xFF	; 255
    12fc:	4f 4f       	sbci	r20, 0xFF	; 255
    12fe:	5f 4f       	sbci	r21, 0xFF	; 255

00001300 <__divmodsi4_exit>:
    1300:	08 95       	ret

00001302 <__negsi2>:
    1302:	90 95       	com	r25
    1304:	80 95       	com	r24
    1306:	70 95       	com	r23
    1308:	61 95       	neg	r22
    130a:	7f 4f       	sbci	r23, 0xFF	; 255
    130c:	8f 4f       	sbci	r24, 0xFF	; 255
    130e:	9f 4f       	sbci	r25, 0xFF	; 255
    1310:	08 95       	ret

00001312 <__tablejump2__>:
    1312:	ee 0f       	add	r30, r30
    1314:	ff 1f       	adc	r31, r31
    1316:	05 90       	lpm	r0, Z+
    1318:	f4 91       	lpm	r31, Z
    131a:	e0 2d       	mov	r30, r0
    131c:	09 94       	ijmp

0000131e <__muluhisi3>:
    131e:	0e 94 b6 09 	call	0x136c	; 0x136c <__umulhisi3>
    1322:	a5 9f       	mul	r26, r21
    1324:	90 0d       	add	r25, r0
    1326:	b4 9f       	mul	r27, r20
    1328:	90 0d       	add	r25, r0
    132a:	a4 9f       	mul	r26, r20
    132c:	80 0d       	add	r24, r0
    132e:	91 1d       	adc	r25, r1
    1330:	11 24       	eor	r1, r1
    1332:	08 95       	ret

00001334 <__mulshisi3>:
    1334:	b7 ff       	sbrs	r27, 7
    1336:	0c 94 8f 09 	jmp	0x131e	; 0x131e <__muluhisi3>

0000133a <__mulohisi3>:
    133a:	0e 94 8f 09 	call	0x131e	; 0x131e <__muluhisi3>
    133e:	82 1b       	sub	r24, r18
    1340:	93 0b       	sbc	r25, r19
    1342:	08 95       	ret

00001344 <__udivmodhi4>:
    1344:	aa 1b       	sub	r26, r26
    1346:	bb 1b       	sub	r27, r27
    1348:	51 e1       	ldi	r21, 0x11	; 17
    134a:	07 c0       	rjmp	.+14     	; 0x135a <__udivmodhi4_ep>

0000134c <__udivmodhi4_loop>:
    134c:	aa 1f       	adc	r26, r26
    134e:	bb 1f       	adc	r27, r27
    1350:	a6 17       	cp	r26, r22
    1352:	b7 07       	cpc	r27, r23
    1354:	10 f0       	brcs	.+4      	; 0x135a <__udivmodhi4_ep>
    1356:	a6 1b       	sub	r26, r22
    1358:	b7 0b       	sbc	r27, r23

0000135a <__udivmodhi4_ep>:
    135a:	88 1f       	adc	r24, r24
    135c:	99 1f       	adc	r25, r25
    135e:	5a 95       	dec	r21
    1360:	a9 f7       	brne	.-22     	; 0x134c <__udivmodhi4_loop>
    1362:	80 95       	com	r24
    1364:	90 95       	com	r25
    1366:	bc 01       	movw	r22, r24
    1368:	cd 01       	movw	r24, r26
    136a:	08 95       	ret

0000136c <__umulhisi3>:
    136c:	a2 9f       	mul	r26, r18
    136e:	b0 01       	movw	r22, r0
    1370:	b3 9f       	mul	r27, r19
    1372:	c0 01       	movw	r24, r0
    1374:	a3 9f       	mul	r26, r19
    1376:	70 0d       	add	r23, r0
    1378:	81 1d       	adc	r24, r1
    137a:	11 24       	eor	r1, r1
    137c:	91 1d       	adc	r25, r1
    137e:	b2 9f       	mul	r27, r18
    1380:	70 0d       	add	r23, r0
    1382:	81 1d       	adc	r24, r1
    1384:	11 24       	eor	r1, r1
    1386:	91 1d       	adc	r25, r1
    1388:	08 95       	ret

0000138a <_exit>:
    138a:	f8 94       	cli

0000138c <__stop_program>:
    138c:	ff cf       	rjmp	.-2      	; 0x138c <__stop_program>
