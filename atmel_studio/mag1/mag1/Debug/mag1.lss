
mag1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000039e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000034a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000039e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000003d0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000070  00000000  00000000  0000040c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000970  00000000  00000000  0000047c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006ef  00000000  00000000  00000dec  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000047d  00000000  00000000  000014db  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000d0  00000000  00000000  00001958  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000504  00000000  00000000  00001a28  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000211  00000000  00000000  00001f2c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000060  00000000  00000000  0000213d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 9a 00 	call	0x134	; 0x134 <main>
  78:	0c 94 a3 01 	jmp	0x346	; 0x346 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <_Z9UART_openmm>:
	READ_BYTE = TWDR;

	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);
	
	return READ_BYTE;
  80:	0f 93       	push	r16
  82:	1f 93       	push	r17
  84:	68 94       	set
  86:	13 f8       	bld	r1, 3
  88:	96 95       	lsr	r25
  8a:	87 95       	ror	r24
  8c:	77 95       	ror	r23
  8e:	67 95       	ror	r22
  90:	16 94       	lsr	r1
  92:	d1 f7       	brne	.-12     	; 0x88 <_Z9UART_openmm+0x8>
  94:	0e 94 81 01 	call	0x302	; 0x302 <__udivmodsi4>
  98:	ca 01       	movw	r24, r20
  9a:	b9 01       	movw	r22, r18
  9c:	61 50       	subi	r22, 0x01	; 1
  9e:	71 09       	sbc	r23, r1
  a0:	81 09       	sbc	r24, r1
  a2:	91 09       	sbc	r25, r1
  a4:	0e 94 ce 00 	call	0x19c	; 0x19c <__floatunsisf>
  a8:	0e 94 34 01 	call	0x268	; 0x268 <round>
  ac:	0e 94 9f 00 	call	0x13e	; 0x13e <__fixunssfsi>
  b0:	07 2f       	mov	r16, r23
  b2:	18 2f       	mov	r17, r24
  b4:	29 2f       	mov	r18, r25
  b6:	33 27       	eor	r19, r19
  b8:	00 93 c5 00 	sts	0x00C5, r16	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
  bc:	60 93 c4 00 	sts	0x00C4, r22	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
  c0:	88 e9       	ldi	r24, 0x98	; 152
  c2:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
  c6:	8e e0       	ldi	r24, 0x0E	; 14
  c8:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
  cc:	1f 91       	pop	r17
  ce:	0f 91       	pop	r16
  d0:	08 95       	ret

000000d2 <_Z15UART_write_byteh>:
  d2:	e0 ec       	ldi	r30, 0xC0	; 192
  d4:	f0 e0       	ldi	r31, 0x00	; 0
  d6:	90 81       	ld	r25, Z
  d8:	95 ff       	sbrs	r25, 5
  da:	fd cf       	rjmp	.-6      	; 0xd6 <_Z15UART_write_byteh+0x4>
  dc:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
  e0:	08 95       	ret

000000e2 <_Z14delay_countersm>:
#include <avr/interrupt.h>
#include "D:\girkraken\AVR_Lib\UART_Serial_328.h"
#include "D:\girkraken\AVR_Lib\TWI_wire.h"


void delay_counters(unsigned long long_delay){
  e2:	ab 01       	movw	r20, r22
  e4:	bc 01       	movw	r22, r24
	for(unsigned long i = 0;i<long_delay;i++)
  e6:	41 15       	cp	r20, r1
  e8:	51 05       	cpc	r21, r1
  ea:	61 05       	cpc	r22, r1
  ec:	71 05       	cpc	r23, r1
  ee:	61 f0       	breq	.+24     	; 0x108 <_Z14delay_countersm+0x26>
  f0:	80 e0       	ldi	r24, 0x00	; 0
  f2:	90 e0       	ldi	r25, 0x00	; 0
  f4:	dc 01       	movw	r26, r24
	{
		asm volatile("nop");
  f6:	00 00       	nop
#include "D:\girkraken\AVR_Lib\UART_Serial_328.h"
#include "D:\girkraken\AVR_Lib\TWI_wire.h"


void delay_counters(unsigned long long_delay){
	for(unsigned long i = 0;i<long_delay;i++)
  f8:	01 96       	adiw	r24, 0x01	; 1
  fa:	a1 1d       	adc	r26, r1
  fc:	b1 1d       	adc	r27, r1
  fe:	48 17       	cp	r20, r24
 100:	59 07       	cpc	r21, r25
 102:	6a 07       	cpc	r22, r26
 104:	7b 07       	cpc	r23, r27
 106:	b9 f7       	brne	.-18     	; 0xf6 <_Z14delay_countersm+0x14>
 108:	08 95       	ret

0000010a <_Z5setupv>:
}


void setup()
{
	 UART_open(8000000, 9600);
 10a:	20 e8       	ldi	r18, 0x80	; 128
 10c:	35 e2       	ldi	r19, 0x25	; 37
 10e:	40 e0       	ldi	r20, 0x00	; 0
 110:	50 e0       	ldi	r21, 0x00	; 0
 112:	60 e0       	ldi	r22, 0x00	; 0
 114:	72 e1       	ldi	r23, 0x12	; 18
 116:	8a e7       	ldi	r24, 0x7A	; 122
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	0e 94 40 00 	call	0x80	; 0x80 <_Z9UART_openmm>
 11e:	08 95       	ret

00000120 <_Z4loopv>:
}

void loop()
{
	UART_write_byte(33);
 120:	81 e2       	ldi	r24, 0x21	; 33
 122:	0e 94 69 00 	call	0xd2	; 0xd2 <_Z15UART_write_byteh>
	
	delay_counters(5000);
 126:	68 e8       	ldi	r22, 0x88	; 136
 128:	73 e1       	ldi	r23, 0x13	; 19
 12a:	80 e0       	ldi	r24, 0x00	; 0
 12c:	90 e0       	ldi	r25, 0x00	; 0
 12e:	0e 94 71 00 	call	0xe2	; 0xe2 <_Z14delay_countersm>
 132:	08 95       	ret

00000134 <main>:
}

int main (void)
{
	setup();
 134:	0e 94 85 00 	call	0x10a	; 0x10a <_Z5setupv>
	while(1)
	{
		loop();
 138:	0e 94 90 00 	call	0x120	; 0x120 <_Z4loopv>
 13c:	fd cf       	rjmp	.-6      	; 0x138 <main+0x4>

0000013e <__fixunssfsi>:
 13e:	0e 94 13 01 	call	0x226	; 0x226 <__fp_splitA>
 142:	88 f0       	brcs	.+34     	; 0x166 <__fixunssfsi+0x28>
 144:	9f 57       	subi	r25, 0x7F	; 127
 146:	98 f0       	brcs	.+38     	; 0x16e <__fixunssfsi+0x30>
 148:	b9 2f       	mov	r27, r25
 14a:	99 27       	eor	r25, r25
 14c:	b7 51       	subi	r27, 0x17	; 23
 14e:	b0 f0       	brcs	.+44     	; 0x17c <__fixunssfsi+0x3e>
 150:	e1 f0       	breq	.+56     	; 0x18a <__fixunssfsi+0x4c>
 152:	66 0f       	add	r22, r22
 154:	77 1f       	adc	r23, r23
 156:	88 1f       	adc	r24, r24
 158:	99 1f       	adc	r25, r25
 15a:	1a f0       	brmi	.+6      	; 0x162 <__fixunssfsi+0x24>
 15c:	ba 95       	dec	r27
 15e:	c9 f7       	brne	.-14     	; 0x152 <__fixunssfsi+0x14>
 160:	14 c0       	rjmp	.+40     	; 0x18a <__fixunssfsi+0x4c>
 162:	b1 30       	cpi	r27, 0x01	; 1
 164:	91 f0       	breq	.+36     	; 0x18a <__fixunssfsi+0x4c>
 166:	0e 94 2d 01 	call	0x25a	; 0x25a <__fp_zero>
 16a:	b1 e0       	ldi	r27, 0x01	; 1
 16c:	08 95       	ret
 16e:	0c 94 2d 01 	jmp	0x25a	; 0x25a <__fp_zero>
 172:	67 2f       	mov	r22, r23
 174:	78 2f       	mov	r23, r24
 176:	88 27       	eor	r24, r24
 178:	b8 5f       	subi	r27, 0xF8	; 248
 17a:	39 f0       	breq	.+14     	; 0x18a <__fixunssfsi+0x4c>
 17c:	b9 3f       	cpi	r27, 0xF9	; 249
 17e:	cc f3       	brlt	.-14     	; 0x172 <__fixunssfsi+0x34>
 180:	86 95       	lsr	r24
 182:	77 95       	ror	r23
 184:	67 95       	ror	r22
 186:	b3 95       	inc	r27
 188:	d9 f7       	brne	.-10     	; 0x180 <__fixunssfsi+0x42>
 18a:	3e f4       	brtc	.+14     	; 0x19a <__fixunssfsi+0x5c>
 18c:	90 95       	com	r25
 18e:	80 95       	com	r24
 190:	70 95       	com	r23
 192:	61 95       	neg	r22
 194:	7f 4f       	sbci	r23, 0xFF	; 255
 196:	8f 4f       	sbci	r24, 0xFF	; 255
 198:	9f 4f       	sbci	r25, 0xFF	; 255
 19a:	08 95       	ret

0000019c <__floatunsisf>:
 19c:	e8 94       	clt
 19e:	09 c0       	rjmp	.+18     	; 0x1b2 <__floatsisf+0x12>

000001a0 <__floatsisf>:
 1a0:	97 fb       	bst	r25, 7
 1a2:	3e f4       	brtc	.+14     	; 0x1b2 <__floatsisf+0x12>
 1a4:	90 95       	com	r25
 1a6:	80 95       	com	r24
 1a8:	70 95       	com	r23
 1aa:	61 95       	neg	r22
 1ac:	7f 4f       	sbci	r23, 0xFF	; 255
 1ae:	8f 4f       	sbci	r24, 0xFF	; 255
 1b0:	9f 4f       	sbci	r25, 0xFF	; 255
 1b2:	99 23       	and	r25, r25
 1b4:	a9 f0       	breq	.+42     	; 0x1e0 <__floatsisf+0x40>
 1b6:	f9 2f       	mov	r31, r25
 1b8:	96 e9       	ldi	r25, 0x96	; 150
 1ba:	bb 27       	eor	r27, r27
 1bc:	93 95       	inc	r25
 1be:	f6 95       	lsr	r31
 1c0:	87 95       	ror	r24
 1c2:	77 95       	ror	r23
 1c4:	67 95       	ror	r22
 1c6:	b7 95       	ror	r27
 1c8:	f1 11       	cpse	r31, r1
 1ca:	f8 cf       	rjmp	.-16     	; 0x1bc <__floatsisf+0x1c>
 1cc:	fa f4       	brpl	.+62     	; 0x20c <__floatsisf+0x6c>
 1ce:	bb 0f       	add	r27, r27
 1d0:	11 f4       	brne	.+4      	; 0x1d6 <__floatsisf+0x36>
 1d2:	60 ff       	sbrs	r22, 0
 1d4:	1b c0       	rjmp	.+54     	; 0x20c <__floatsisf+0x6c>
 1d6:	6f 5f       	subi	r22, 0xFF	; 255
 1d8:	7f 4f       	sbci	r23, 0xFF	; 255
 1da:	8f 4f       	sbci	r24, 0xFF	; 255
 1dc:	9f 4f       	sbci	r25, 0xFF	; 255
 1de:	16 c0       	rjmp	.+44     	; 0x20c <__floatsisf+0x6c>
 1e0:	88 23       	and	r24, r24
 1e2:	11 f0       	breq	.+4      	; 0x1e8 <__floatsisf+0x48>
 1e4:	96 e9       	ldi	r25, 0x96	; 150
 1e6:	11 c0       	rjmp	.+34     	; 0x20a <__floatsisf+0x6a>
 1e8:	77 23       	and	r23, r23
 1ea:	21 f0       	breq	.+8      	; 0x1f4 <__floatsisf+0x54>
 1ec:	9e e8       	ldi	r25, 0x8E	; 142
 1ee:	87 2f       	mov	r24, r23
 1f0:	76 2f       	mov	r23, r22
 1f2:	05 c0       	rjmp	.+10     	; 0x1fe <__floatsisf+0x5e>
 1f4:	66 23       	and	r22, r22
 1f6:	71 f0       	breq	.+28     	; 0x214 <__floatsisf+0x74>
 1f8:	96 e8       	ldi	r25, 0x86	; 134
 1fa:	86 2f       	mov	r24, r22
 1fc:	70 e0       	ldi	r23, 0x00	; 0
 1fe:	60 e0       	ldi	r22, 0x00	; 0
 200:	2a f0       	brmi	.+10     	; 0x20c <__floatsisf+0x6c>
 202:	9a 95       	dec	r25
 204:	66 0f       	add	r22, r22
 206:	77 1f       	adc	r23, r23
 208:	88 1f       	adc	r24, r24
 20a:	da f7       	brpl	.-10     	; 0x202 <__floatsisf+0x62>
 20c:	88 0f       	add	r24, r24
 20e:	96 95       	lsr	r25
 210:	87 95       	ror	r24
 212:	97 f9       	bld	r25, 7
 214:	08 95       	ret

00000216 <__fp_split3>:
 216:	57 fd       	sbrc	r21, 7
 218:	90 58       	subi	r25, 0x80	; 128
 21a:	44 0f       	add	r20, r20
 21c:	55 1f       	adc	r21, r21
 21e:	59 f0       	breq	.+22     	; 0x236 <__fp_splitA+0x10>
 220:	5f 3f       	cpi	r21, 0xFF	; 255
 222:	71 f0       	breq	.+28     	; 0x240 <__fp_splitA+0x1a>
 224:	47 95       	ror	r20

00000226 <__fp_splitA>:
 226:	88 0f       	add	r24, r24
 228:	97 fb       	bst	r25, 7
 22a:	99 1f       	adc	r25, r25
 22c:	61 f0       	breq	.+24     	; 0x246 <__fp_splitA+0x20>
 22e:	9f 3f       	cpi	r25, 0xFF	; 255
 230:	79 f0       	breq	.+30     	; 0x250 <__fp_splitA+0x2a>
 232:	87 95       	ror	r24
 234:	08 95       	ret
 236:	12 16       	cp	r1, r18
 238:	13 06       	cpc	r1, r19
 23a:	14 06       	cpc	r1, r20
 23c:	55 1f       	adc	r21, r21
 23e:	f2 cf       	rjmp	.-28     	; 0x224 <__fp_split3+0xe>
 240:	46 95       	lsr	r20
 242:	f1 df       	rcall	.-30     	; 0x226 <__fp_splitA>
 244:	08 c0       	rjmp	.+16     	; 0x256 <__fp_splitA+0x30>
 246:	16 16       	cp	r1, r22
 248:	17 06       	cpc	r1, r23
 24a:	18 06       	cpc	r1, r24
 24c:	99 1f       	adc	r25, r25
 24e:	f1 cf       	rjmp	.-30     	; 0x232 <__fp_splitA+0xc>
 250:	86 95       	lsr	r24
 252:	71 05       	cpc	r23, r1
 254:	61 05       	cpc	r22, r1
 256:	08 94       	sec
 258:	08 95       	ret

0000025a <__fp_zero>:
 25a:	e8 94       	clt

0000025c <__fp_szero>:
 25c:	bb 27       	eor	r27, r27
 25e:	66 27       	eor	r22, r22
 260:	77 27       	eor	r23, r23
 262:	cb 01       	movw	r24, r22
 264:	97 f9       	bld	r25, 7
 266:	08 95       	ret

00000268 <round>:
 268:	0e 94 13 01 	call	0x226	; 0x226 <__fp_splitA>
 26c:	e8 f0       	brcs	.+58     	; 0x2a8 <round+0x40>
 26e:	9e 37       	cpi	r25, 0x7E	; 126
 270:	e8 f0       	brcs	.+58     	; 0x2ac <round+0x44>
 272:	96 39       	cpi	r25, 0x96	; 150
 274:	b8 f4       	brcc	.+46     	; 0x2a4 <round+0x3c>
 276:	9e 38       	cpi	r25, 0x8E	; 142
 278:	48 f4       	brcc	.+18     	; 0x28c <round+0x24>
 27a:	67 2f       	mov	r22, r23
 27c:	78 2f       	mov	r23, r24
 27e:	88 27       	eor	r24, r24
 280:	98 5f       	subi	r25, 0xF8	; 248
 282:	f9 cf       	rjmp	.-14     	; 0x276 <round+0xe>
 284:	86 95       	lsr	r24
 286:	77 95       	ror	r23
 288:	67 95       	ror	r22
 28a:	93 95       	inc	r25
 28c:	95 39       	cpi	r25, 0x95	; 149
 28e:	d0 f3       	brcs	.-12     	; 0x284 <round+0x1c>
 290:	b6 2f       	mov	r27, r22
 292:	b1 70       	andi	r27, 0x01	; 1
 294:	6b 0f       	add	r22, r27
 296:	71 1d       	adc	r23, r1
 298:	81 1d       	adc	r24, r1
 29a:	20 f4       	brcc	.+8      	; 0x2a4 <round+0x3c>
 29c:	87 95       	ror	r24
 29e:	77 95       	ror	r23
 2a0:	67 95       	ror	r22
 2a2:	93 95       	inc	r25
 2a4:	0c 94 58 01 	jmp	0x2b0	; 0x2b0 <__fp_mintl>
 2a8:	0c 94 73 01 	jmp	0x2e6	; 0x2e6 <__fp_mpack>
 2ac:	0c 94 2e 01 	jmp	0x25c	; 0x25c <__fp_szero>

000002b0 <__fp_mintl>:
 2b0:	88 23       	and	r24, r24
 2b2:	71 f4       	brne	.+28     	; 0x2d0 <__fp_mintl+0x20>
 2b4:	77 23       	and	r23, r23
 2b6:	21 f0       	breq	.+8      	; 0x2c0 <__fp_mintl+0x10>
 2b8:	98 50       	subi	r25, 0x08	; 8
 2ba:	87 2b       	or	r24, r23
 2bc:	76 2f       	mov	r23, r22
 2be:	07 c0       	rjmp	.+14     	; 0x2ce <__fp_mintl+0x1e>
 2c0:	66 23       	and	r22, r22
 2c2:	11 f4       	brne	.+4      	; 0x2c8 <__fp_mintl+0x18>
 2c4:	99 27       	eor	r25, r25
 2c6:	0d c0       	rjmp	.+26     	; 0x2e2 <__fp_mintl+0x32>
 2c8:	90 51       	subi	r25, 0x10	; 16
 2ca:	86 2b       	or	r24, r22
 2cc:	70 e0       	ldi	r23, 0x00	; 0
 2ce:	60 e0       	ldi	r22, 0x00	; 0
 2d0:	2a f0       	brmi	.+10     	; 0x2dc <__fp_mintl+0x2c>
 2d2:	9a 95       	dec	r25
 2d4:	66 0f       	add	r22, r22
 2d6:	77 1f       	adc	r23, r23
 2d8:	88 1f       	adc	r24, r24
 2da:	da f7       	brpl	.-10     	; 0x2d2 <__fp_mintl+0x22>
 2dc:	88 0f       	add	r24, r24
 2de:	96 95       	lsr	r25
 2e0:	87 95       	ror	r24
 2e2:	97 f9       	bld	r25, 7
 2e4:	08 95       	ret

000002e6 <__fp_mpack>:
 2e6:	9f 3f       	cpi	r25, 0xFF	; 255
 2e8:	31 f0       	breq	.+12     	; 0x2f6 <__fp_mpack_finite+0xc>

000002ea <__fp_mpack_finite>:
 2ea:	91 50       	subi	r25, 0x01	; 1
 2ec:	20 f4       	brcc	.+8      	; 0x2f6 <__fp_mpack_finite+0xc>
 2ee:	87 95       	ror	r24
 2f0:	77 95       	ror	r23
 2f2:	67 95       	ror	r22
 2f4:	b7 95       	ror	r27
 2f6:	88 0f       	add	r24, r24
 2f8:	91 1d       	adc	r25, r1
 2fa:	96 95       	lsr	r25
 2fc:	87 95       	ror	r24
 2fe:	97 f9       	bld	r25, 7
 300:	08 95       	ret

00000302 <__udivmodsi4>:
 302:	a1 e2       	ldi	r26, 0x21	; 33
 304:	1a 2e       	mov	r1, r26
 306:	aa 1b       	sub	r26, r26
 308:	bb 1b       	sub	r27, r27
 30a:	fd 01       	movw	r30, r26
 30c:	0d c0       	rjmp	.+26     	; 0x328 <__udivmodsi4_ep>

0000030e <__udivmodsi4_loop>:
 30e:	aa 1f       	adc	r26, r26
 310:	bb 1f       	adc	r27, r27
 312:	ee 1f       	adc	r30, r30
 314:	ff 1f       	adc	r31, r31
 316:	a2 17       	cp	r26, r18
 318:	b3 07       	cpc	r27, r19
 31a:	e4 07       	cpc	r30, r20
 31c:	f5 07       	cpc	r31, r21
 31e:	20 f0       	brcs	.+8      	; 0x328 <__udivmodsi4_ep>
 320:	a2 1b       	sub	r26, r18
 322:	b3 0b       	sbc	r27, r19
 324:	e4 0b       	sbc	r30, r20
 326:	f5 0b       	sbc	r31, r21

00000328 <__udivmodsi4_ep>:
 328:	66 1f       	adc	r22, r22
 32a:	77 1f       	adc	r23, r23
 32c:	88 1f       	adc	r24, r24
 32e:	99 1f       	adc	r25, r25
 330:	1a 94       	dec	r1
 332:	69 f7       	brne	.-38     	; 0x30e <__udivmodsi4_loop>
 334:	60 95       	com	r22
 336:	70 95       	com	r23
 338:	80 95       	com	r24
 33a:	90 95       	com	r25
 33c:	9b 01       	movw	r18, r22
 33e:	ac 01       	movw	r20, r24
 340:	bd 01       	movw	r22, r26
 342:	cf 01       	movw	r24, r30
 344:	08 95       	ret

00000346 <_exit>:
 346:	f8 94       	cli

00000348 <__stop_program>:
 348:	ff cf       	rjmp	.-2      	; 0x348 <__stop_program>
